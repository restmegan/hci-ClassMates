import type { Channel, UserResponse } from 'stream-chat';
import type { TranslationContextValue } from '../../context/TranslationContext';
import type { DefaultAttachmentType, DefaultChannelType, DefaultMessageType, DefaultUserType } from '../../../types/types';
export declare const getLatestMessagePreview: <At extends DefaultAttachmentType = DefaultAttachmentType, Ch extends DefaultChannelType = DefaultChannelType, Co extends string & {} = string & {}, Ev extends Record<string, unknown> = Record<string, unknown>, Me extends DefaultMessageType = DefaultMessageType, Re extends Record<string, unknown> = Record<string, unknown>, Us extends DefaultUserType<Us> = DefaultUserType<import("../../../types/types").DefaultUserTypeInternal>>(channel: Channel<At, Ch, Co, Ev, Me, Re, Us>, t: TranslationContextValue['t'], userLanguage?: TranslationContextValue['userLanguage']) => string;
export declare const getDisplayTitle: <At extends DefaultAttachmentType = DefaultAttachmentType, Ch extends DefaultChannelType = DefaultChannelType, Co extends string & {} = string & {}, Ev extends Record<string, unknown> = Record<string, unknown>, Me extends DefaultMessageType = DefaultMessageType, Re extends Record<string, unknown> = Record<string, unknown>, Us extends DefaultUserType<Us> = DefaultUserType<import("../../../types/types").DefaultUserTypeInternal>>(channel: Channel<At, Ch, Co, Ev, Me, Re, Us>, currentUser?: UserResponse<Us> | undefined) => string | undefined;
export declare const getDisplayImage: <At extends DefaultAttachmentType = DefaultAttachmentType, Ch extends DefaultChannelType = DefaultChannelType, Co extends string & {} = string & {}, Ev extends Record<string, unknown> = Record<string, unknown>, Me extends DefaultMessageType = DefaultMessageType, Re extends Record<string, unknown> = Record<string, unknown>, Us extends DefaultUserType<import("../../../types/types").DefaultUserTypeInternal> = DefaultUserType<import("../../../types/types").DefaultUserTypeInternal>>(channel: Channel<At, Ch, Co, Ev, Me, Re, Us>, currentUser?: UserResponse<Us> | undefined) => string | undefined;
//# sourceMappingURL=utils.d.ts.map