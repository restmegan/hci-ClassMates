import React from 'react';
import { MessageOptionsProps } from './MessageOptions';
import type { MessageUIComponentProps, MouseEventHandler } from './types';
import type { DefaultAttachmentType, DefaultChannelType, DefaultCommandType, DefaultEventType, DefaultMessageType, DefaultReactionType, DefaultUserType } from '../../../types/types';
export declare type MessageTextProps<At extends DefaultAttachmentType = DefaultAttachmentType, Ch extends DefaultChannelType = DefaultChannelType, Co extends DefaultCommandType = DefaultCommandType, Ev extends DefaultEventType = DefaultEventType, Me extends DefaultMessageType = DefaultMessageType, Re extends DefaultReactionType = DefaultReactionType, Us extends DefaultUserType<Us> = DefaultUserType> = MessageUIComponentProps<At, Ch, Co, Ev, Me, Re, Us> & {
    customInnerClass?: string;
    customOptionProps?: Partial<MessageOptionsProps<At, Ch, Co, Ev, Me, Re, Us>>;
    customWrapperClass?: string;
    messageWrapperRef?: React.RefObject<HTMLDivElement>;
    onReactionListClick?: MouseEventHandler;
    reactionSelectorRef?: React.RefObject<HTMLDivElement>;
    showDetailedReactions?: boolean;
    theme?: string;
};
export declare const MessageText: <At extends DefaultAttachmentType = DefaultAttachmentType, Ch extends DefaultChannelType = DefaultChannelType, Co extends string & {} = string & {}, Ev extends Record<string, unknown> = Record<string, unknown>, Me extends DefaultMessageType = DefaultMessageType, Re extends Record<string, unknown> = Record<string, unknown>, Us extends DefaultUserType<Us> = DefaultUserType<import("../../../types/types").DefaultUserTypeInternal>>(props: MessageTextProps<At, Ch, Co, Ev, Me, Re, Us>) => JSX.Element | null;
//# sourceMappingURL=MessageText.d.ts.map