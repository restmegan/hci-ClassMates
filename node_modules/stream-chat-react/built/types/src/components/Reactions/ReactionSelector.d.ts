import React from 'react';
import { AvatarProps } from '../Avatar';
import { MinimalEmoji } from '../../context/ChannelContext';
import type { ReactionResponse } from 'stream-chat';
import type { DefaultReactionType, DefaultUserType } from '../../../types/types';
export declare type ReactionSelectorProps<Re extends DefaultReactionType = DefaultReactionType, Us extends DefaultUserType<Us> = DefaultUserType> = {
    /**
     * Custom UI component to display user avatar.
     *
     * Defaults to and accepts same props as: [Avatar](https://github.com/GetStream/stream-chat-react/blob/master/src/components/Avatar/Avatar.tsx)
     * */
    Avatar?: React.ElementType<AvatarProps>;
    /** Enable the avatar display */
    detailedView?: boolean;
    /**
     * Handler to set/unset reaction on message.
     *
     * @param type e.g. 'like' | 'love' | 'haha' | 'wow' | 'sad' | 'angry'
     * */
    handleReaction?: (reactionType: string, event: React.MouseEvent<HTMLElement, MouseEvent>) => Promise<void>;
    /**
     * Array of latest reactions.
     * Reaction object has following structure:
     *
     * ```json
     * {
     *  "type": "love",
     *  "user_id": "demo_user_id",
     *  "user": {
     *    ...userObject
     *  },
     *  "created_at": "datetime";
     * }
     * ```
     * */
    latest_reactions?: ReactionResponse<Re, Us>[];
    own_reactions?: ReactionResponse<Re, Us>[] | null;
    /** Object/map of reaction id/type (e.g. 'like' | 'love' | 'haha' | 'wow' | 'sad' | 'angry') vs count */
    reaction_counts?: {
        [key: string]: number;
    };
    /** Provide a list of reaction options [{id: 'angry', emoji: 'angry'}] */
    reactionOptions?: MinimalEmoji[];
    /** Adds a CSS class that changes the horizontal positioning to the opposite (right: 0), defaults to false (left: 0) */
    reverse?: boolean;
};
/**
 * Component that allows you to select a reaction.
 */
export declare const ReactionSelector: React.ForwardRefExoticComponent<ReactionSelectorProps<Record<string, unknown>, DefaultUserType<any>> & React.RefAttributes<HTMLDivElement | null>>;
//# sourceMappingURL=ReactionSelector.d.ts.map