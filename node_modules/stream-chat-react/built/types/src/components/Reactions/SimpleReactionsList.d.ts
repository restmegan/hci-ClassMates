import React from 'react';
import { MinimalEmoji } from '../../context/ChannelContext';
import type { ReactionResponse } from 'stream-chat';
import type { DefaultAttachmentType, DefaultChannelType, DefaultMessageType, DefaultReactionType, DefaultUserType } from '../../../types/types';
export declare type SimpleReactionsListProps<Re extends DefaultReactionType = DefaultReactionType, Us extends DefaultUserType<Us> = DefaultUserType> = {
    /**
     * Handler to set/unset reaction on message.
     *
     * @param type e.g. 'like' | 'love' | 'haha' | 'wow' | 'sad' | 'angry'
     * */
    handleReaction: (reactionType: string, event: React.MouseEvent<HTMLElement, MouseEvent>) => Promise<void>;
    /** Object/map of reaction id/type (e.g. 'like' | 'love' | 'haha' | 'wow' | 'sad' | 'angry') vs count */
    reaction_counts?: {
        [key: string]: number;
    };
    /** Provide a list of reaction options [{id: 'angry', emoji: 'angry'}] */
    reactionOptions?: MinimalEmoji[];
    reactions?: ReactionResponse<Re, Us>[];
};
export declare const SimpleReactionsList: <At extends DefaultAttachmentType = DefaultAttachmentType, Ch extends DefaultChannelType = DefaultChannelType, Co extends string & {} = string & {}, Ev extends Record<string, unknown> = Record<string, unknown>, Me extends DefaultMessageType = DefaultMessageType, Re extends Record<string, unknown> = Record<string, unknown>, Us extends DefaultUserType<Us> = DefaultUserType<import("../../../types/types").DefaultUserTypeInternal>>(props: SimpleReactionsListProps<Re, Us>) => JSX.Element | null;
//# sourceMappingURL=SimpleReactionsList.d.ts.map