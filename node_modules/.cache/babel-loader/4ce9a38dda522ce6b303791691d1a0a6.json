{"ast":null,"code":"import _regeneratorRuntime from \"/Users/akshatdhankher/Desktop/HCI/hci-ClassMates/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/akshatdhankher/Desktop/HCI/hci-ClassMates/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/akshatdhankher/Desktop/HCI/hci-ClassMates/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/akshatdhankher/Desktop/HCI/hci-ClassMates/src/ChatPageUI/src/components/MessagingChannelHeader/MessagingChannelHeader.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useRef, useState } from 'react';\nimport { Avatar, ChannelContext } from 'stream-chat-react';\nimport './MessagingChannelHeader.css';\nimport { TypingIndicator } from '../TypingIndicator/TypingIndicator';\nimport { ChannelInfoIcon, ChannelSaveIcon, getCleanImage, HamburgerIcon } from '../../assets';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar getAvatarGroup = function getAvatarGroup(members) {\n  if (members.length === 1) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messaging__channel-header__avatars\",\n      children: [/*#__PURE__*/_jsxDEV(Avatar, {\n        image: getCleanImage(members[0]),\n        size: 40\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, _this), \";\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, _this);\n  }\n\n  if (members.length === 2) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messaging__channel-header__avatars two\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: /*#__PURE__*/_jsxDEV(Avatar, {\n          image: getCleanImage(members[0]),\n          shape: \"square\",\n          size: 40\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: /*#__PURE__*/_jsxDEV(Avatar, {\n          image: getCleanImage(members[1]),\n          shape: \"square\",\n          size: 40\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, _this);\n  }\n\n  if (members.length === 3) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messaging__channel-header__avatars three\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: /*#__PURE__*/_jsxDEV(Avatar, {\n          image: getCleanImage(members[0]),\n          shape: \"square\",\n          size: 40\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [/*#__PURE__*/_jsxDEV(Avatar, {\n          image: getCleanImage(members[1]),\n          shape: \"square\",\n          size: 20\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(Avatar, {\n          image: getCleanImage(members[2]),\n          shape: \"square\",\n          size: 20\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, _this);\n  }\n\n  if (members.length >= 4) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messaging__channel-header__avatars four\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: [/*#__PURE__*/_jsxDEV(Avatar, {\n          image: getCleanImage(members[members.length - 1]),\n          shape: \"square\",\n          size: 20\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(Avatar, {\n          image: getCleanImage(members[members.length - 2]),\n          shape: \"square\",\n          size: 20\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [/*#__PURE__*/_jsxDEV(Avatar, {\n          image: getCleanImage(members[members.length - 3]),\n          shape: \"square\",\n          size: 20\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(Avatar, {\n          image: getCleanImage(members[members.length - 4]),\n          shape: \"square\",\n          size: 20\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, _this);\n  }\n\n  return null;\n};\n\nvar MessagingChannelHeader = function MessagingChannelHeader(props) {\n  _s();\n\n  var _channel$state;\n\n  var _useContext = useContext(ChannelContext),\n      channel = _useContext.channel,\n      client = _useContext.client;\n\n  var _useState = useState((channel === null || channel === void 0 ? void 0 : channel.data.name) || ''),\n      _useState2 = _slicedToArray(_useState, 2),\n      channelName = _useState2[0],\n      setChannelName = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isEditing = _useState4[0],\n      setIsEditing = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      title = _useState6[0],\n      setTitle = _useState6[1];\n\n  var inputRef = useRef();\n  var members = Object.values(((_channel$state = channel.state) === null || _channel$state === void 0 ? void 0 : _channel$state.members) || {}).filter(function (member) {\n    var _member$user, _client$user;\n\n    return ((_member$user = member.user) === null || _member$user === void 0 ? void 0 : _member$user.id) !== (client === null || client === void 0 ? void 0 : (_client$user = client.user) === null || _client$user === void 0 ? void 0 : _client$user.id);\n  });\n\n  var updateChannel = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (e) e.preventDefault();\n\n              if (!(channelName && channelName !== channel.data.name)) {\n                _context.next = 4;\n                break;\n              }\n\n              _context.next = 4;\n              return channel.update({\n                name: channelName\n              }, {\n                text: \"Channel name changed to \".concat(channelName)\n              });\n\n            case 4:\n              setIsEditing(false);\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function updateChannel(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    if (isEditing && inputRef.current) {\n      inputRef.current.focus();\n    }\n  }, [isEditing]);\n  useEffect(function () {\n    if (!channelName) {\n      setTitle(members.map(function (member) {\n        var _member$user2, _member$user3;\n\n        return ((_member$user2 = member.user) === null || _member$user2 === void 0 ? void 0 : _member$user2.name) || ((_member$user3 = member.user) === null || _member$user3 === void 0 ? void 0 : _member$user3.id) || 'Unnamed User';\n      }).join(', '));\n    }\n  }, [channelName, members]);\n\n  var EditHeader = function EditHeader() {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      style: {\n        flex: 1\n      },\n      onSubmit: function onSubmit(e) {\n        e.preventDefault();\n        inputRef.current.blur();\n      },\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        autoFocus: true,\n        className: \"channel-header__edit-input\",\n        onBlur: updateChannel,\n        onChange: function onChange(e) {\n          return setChannelName(e.target.value);\n        },\n        placeholder: \"Type a new name for the chat\",\n        ref: inputRef,\n        value: channelName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 7\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 5\n    }, _this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"messaging__channel-header\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"mobile-nav-icon\",\n      className: \"\".concat(props.theme),\n      onClick: function onClick() {\n        return props.toggleMobile();\n      },\n      children: /*#__PURE__*/_jsxDEV(HamburgerIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, _this), getAvatarGroup(members), !isEditing ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"channel-header__name\",\n      children: channelName || title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 21\n    }, _this) : /*#__PURE__*/_jsxDEV(EditHeader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 90\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messaging__channel-header__right\",\n      children: [/*#__PURE__*/_jsxDEV(TypingIndicator, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, _this), channelName !== 'Classwide Channel' && (!isEditing ? /*#__PURE__*/_jsxDEV(ChannelInfoIcon, {\n        isEditing: isEditing,\n        setIsEditing: setIsEditing\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 63\n      }, _this) : /*#__PURE__*/_jsxDEV(ChannelSaveIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 118\n      }, _this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(MessagingChannelHeader, \"9fpilRyXT50QTX1k3UktW9fmz3g=\");\n\n_c = MessagingChannelHeader;\nexport default _c2 = /*#__PURE__*/React.memo(MessagingChannelHeader);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MessagingChannelHeader\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/akshatdhankher/Desktop/HCI/hci-ClassMates/src/ChatPageUI/src/components/MessagingChannelHeader/MessagingChannelHeader.js"],"names":["React","useContext","useEffect","useRef","useState","Avatar","ChannelContext","TypingIndicator","ChannelInfoIcon","ChannelSaveIcon","getCleanImage","HamburgerIcon","getAvatarGroup","members","length","MessagingChannelHeader","props","channel","client","data","name","channelName","setChannelName","isEditing","setIsEditing","title","setTitle","inputRef","Object","values","state","filter","member","user","id","updateChannel","e","preventDefault","update","text","current","focus","map","join","EditHeader","flex","blur","target","value","theme","toggleMobile","memo"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useRef, useState } from 'react';\nimport { Avatar, ChannelContext } from 'stream-chat-react';\n\nimport './MessagingChannelHeader.css';\n\nimport { TypingIndicator } from '../TypingIndicator/TypingIndicator';\n\nimport { ChannelInfoIcon, ChannelSaveIcon, getCleanImage, HamburgerIcon } from '../../assets';\n\nconst getAvatarGroup = (members) => {\n  if (members.length === 1) {\n    return (\n      <div className='messaging__channel-header__avatars'>\n        <Avatar image={getCleanImage(members[0])} size={40} />;\n      </div>\n    );\n  }\n\n  if (members.length === 2) {\n    return (\n      <div className='messaging__channel-header__avatars two'>\n        <span>\n          <Avatar image={getCleanImage(members[0])} shape='square' size={40} />\n        </span>\n        <span>\n          <Avatar image={getCleanImage(members[1])} shape='square' size={40} />\n        </span>\n      </div>\n    );\n  }\n\n  if (members.length === 3) {\n    return (\n      <div className='messaging__channel-header__avatars three'>\n        <span>\n          <Avatar image={getCleanImage(members[0])} shape='square' size={40} />\n        </span>\n        <span>\n          <Avatar image={getCleanImage(members[1])} shape='square' size={20} />\n          <Avatar image={getCleanImage(members[2])} shape='square' size={20} />\n        </span>\n      </div>\n    );\n  }\n\n  if (members.length >= 4) {\n    return (\n      <div className='messaging__channel-header__avatars four'>\n        <span>\n          <Avatar image={getCleanImage(members[members.length - 1])} shape='square' size={20} />\n          <Avatar image={getCleanImage(members[members.length - 2])} shape='square' size={20} />\n        </span>\n        <span>\n          <Avatar image={getCleanImage(members[members.length - 3])} shape='square' size={20} />\n          <Avatar image={getCleanImage(members[members.length - 4])} shape='square' size={20} />\n        </span>\n      </div>\n    );\n  }\n\n  return null;\n};\n\nconst MessagingChannelHeader = (props) => {\n  const { channel, client } = useContext(ChannelContext);\n\n  const [channelName, setChannelName] = useState(channel?.data.name || '');\n  const [isEditing, setIsEditing] = useState(false);\n  const [title, setTitle] = useState('');\n\n  const inputRef = useRef();\n\n  const members = Object.values(channel.state?.members || {}).filter((member) => member.user?.id !== client?.user?.id);\n\n  const updateChannel = async (e) => {\n    if (e) e.preventDefault();\n\n    if (channelName && channelName !== channel.data.name) {\n      await channel.update({ name: channelName }, { text: `Channel name changed to ${channelName}` });\n    }\n\n    setIsEditing(false);\n  };\n\n  useEffect(() => {\n    if (isEditing && inputRef.current) {\n      inputRef.current.focus();\n    }\n  }, [isEditing]);\n\n  useEffect(() => {\n    if (!channelName) {\n      setTitle(members.map((member) => member.user?.name || member.user?.id || 'Unnamed User').join(', '));\n    }\n  }, [channelName, members]);\n\n  const EditHeader = () => (\n    <form\n      style={{ flex: 1 }}\n      onSubmit={(e) => {\n        e.preventDefault();\n        inputRef.current.blur();\n      }}\n    >\n      <input\n        autoFocus\n        className='channel-header__edit-input'\n        onBlur={updateChannel}\n        onChange={(e) => setChannelName(e.target.value)}\n        placeholder='Type a new name for the chat'\n        ref={inputRef}\n        value={channelName}\n      />\n    </form>\n  );\n\n  return (\n    <div className='messaging__channel-header'>\n      <div id='mobile-nav-icon' className={`${props.theme}`} onClick={() => props.toggleMobile()}>\n        <HamburgerIcon />\n      </div>\n      {getAvatarGroup(members)}\n      {!isEditing ? <div className='channel-header__name'>{channelName || title}</div> : <EditHeader />}\n      <div className='messaging__channel-header__right'>\n        <TypingIndicator />\n        {channelName !== 'Classwide Channel' && (!isEditing ? <ChannelInfoIcon {...{ isEditing, setIsEditing }} /> : <ChannelSaveIcon />)}\n      </div>\n    </div>\n  );\n};\n\nexport default React.memo(MessagingChannelHeader);\n"]},"metadata":{},"sourceType":"module"}