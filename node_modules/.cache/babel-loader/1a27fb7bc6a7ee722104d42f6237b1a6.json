{"ast":null,"code":"var _jsxFileName = \"/Users/akshatdhankher/Desktop/HCI/hci-ClassMates/src/streamchats-code/src/components/WindowControls/WindowControls.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport './WindowControls.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar WindowControls = function WindowControls(_ref) {\n  _s();\n\n  var theme = _ref.theme,\n      setTheme = _ref.setTheme;\n\n  var darkClick = function darkClick() {\n    if (theme === 'dark') return;\n    setTheme('dark');\n  };\n\n  var lightClick = function lightClick() {\n    if (theme === 'light') return;\n    setTheme('light');\n  };\n\n  useEffect(function () {\n    var root = document.querySelector('#root');\n\n    if (theme === 'light') {\n      root.style.background = '#333';\n    } else {\n      root.style.background = '#fff';\n    }\n  }, [theme]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"window-controls__container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"window-controls__button-wrapper \".concat(theme),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"window-controls__button \".concat(theme === 'dark' && 'selected', \" \").concat(theme),\n        onClick: darkClick,\n        children: \"DARK UI\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"window-controls__button \".concat(theme === 'light' && 'selected', \" \").concat(theme),\n        onClick: lightClick,\n        children: \"LIGHT UI\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(WindowControls, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = WindowControls;\nexport default WindowControls;\n\nvar _c;\n\n$RefreshReg$(_c, \"WindowControls\");","map":{"version":3,"sources":["/Users/akshatdhankher/Desktop/HCI/hci-ClassMates/src/streamchats-code/src/components/WindowControls/WindowControls.js"],"names":["React","useEffect","WindowControls","theme","setTheme","darkClick","lightClick","root","document","querySelector","style","background"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAO,sBAAP;;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,OAAyB;AAAA;;AAAA,MAAtBC,KAAsB,QAAtBA,KAAsB;AAAA,MAAfC,QAAe,QAAfA,QAAe;;AAC9C,MAAMC,SAAS,GAAG,SAAZA,SAAY,GAAM;AACtB,QAAIF,KAAK,KAAK,MAAd,EAAsB;AACtBC,IAAAA,QAAQ,CAAC,MAAD,CAAR;AACD,GAHD;;AAKA,MAAME,UAAU,GAAG,SAAbA,UAAa,GAAM;AACvB,QAAIH,KAAK,KAAK,OAAd,EAAuB;AACvBC,IAAAA,QAAQ,CAAC,OAAD,CAAR;AACD,GAHD;;AAKAH,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMM,IAAI,GAAGC,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAAb;;AACA,QAAIN,KAAK,KAAK,OAAd,EAAuB;AACrBI,MAAAA,IAAI,CAACG,KAAL,CAAWC,UAAX,GAAwB,MAAxB;AACD,KAFD,MAEO;AACLJ,MAAAA,IAAI,CAACG,KAAL,CAAWC,UAAX,GAAwB,MAAxB;AACD;AACF,GAPQ,EAON,CAACR,KAAD,CAPM,CAAT;AASA,sBACE;AAAK,IAAA,SAAS,EAAC,4BAAf;AAAA,2BACE;AAAK,MAAA,SAAS,4CAAqCA,KAArC,CAAd;AAAA,8BACE;AAAK,QAAA,SAAS,oCAA6BA,KAAK,KAAK,MAAV,IAAoB,UAAjD,cAA+DA,KAA/D,CAAd;AAAsF,QAAA,OAAO,EAAEE,SAA/F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,eAIE;AAAK,QAAA,SAAS,oCAA6BF,KAAK,KAAK,OAAV,IAAqB,UAAlD,cAAgEA,KAAhE,CAAd;AAAuF,QAAA,OAAO,EAAEG,UAAhG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,WADF;AAYD,CAhCD;;GAAMJ,c;;KAAAA,c;AAkCN,eAAeA,cAAf","sourcesContent":["import React, { useEffect } from 'react';\n\nimport './WindowControls.css';\n\nconst WindowControls = ({ theme, setTheme }) => {\n  const darkClick = () => {\n    if (theme === 'dark') return;\n    setTheme('dark');\n  };\n\n  const lightClick = () => {\n    if (theme === 'light') return;\n    setTheme('light');\n  };\n\n  useEffect(() => {\n    const root = document.querySelector('#root');\n    if (theme === 'light') {\n      root.style.background = '#333';\n    } else {\n      root.style.background = '#fff';\n    }\n  }, [theme]);\n\n  return (\n    <div className='window-controls__container'>\n      <div className={`window-controls__button-wrapper ${theme}`}>\n        <div className={`window-controls__button ${theme === 'dark' && 'selected'} ${theme}`} onClick={darkClick}>\n          DARK UI\n        </div>\n        <div className={`window-controls__button ${theme === 'light' && 'selected'} ${theme}`} onClick={lightClick}>\n          LIGHT UI\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default WindowControls;\n"]},"metadata":{},"sourceType":"module"}