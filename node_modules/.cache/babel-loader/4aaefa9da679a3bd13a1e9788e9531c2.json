{"ast":null,"code":"import _classCallCheck from \"/Users/akshatdhankher/Desktop/HCI/hci-ClassMates/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/akshatdhankher/Desktop/HCI/hci-ClassMates/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/akshatdhankher/Desktop/HCI/hci-ClassMates/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/akshatdhankher/Desktop/HCI/hci-ClassMates/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/Users/akshatdhankher/Desktop/HCI/hci-ClassMates/src/cal-app/src/components/BigCalendar.js\";\nimport React, { Component } from \"react\";\nimport './style.css';\nimport { Calendar, momentLocalizer } from \"react-big-calendar\";\nimport moment from \"moment\";\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\nimport { useState } from \"react\";\nimport { meetings } from \"./meetings.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar localizer = momentLocalizer(moment); // Creates a TalkJS user assuming that the currentUser is passed as a prop to our component.\n// The Talk.User object is used to synchronize user data with TalkJS, so we can display it inside the chat UI.\n\nvar BigCalendar = /*#__PURE__*/function (_Component) {\n  _inherits(BigCalendar, _Component);\n\n  var _super = _createSuper(BigCalendar);\n\n  function BigCalendar() {\n    var _this;\n\n    _classCallCheck(this, BigCalendar);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.calState = {\n      events: meetings\n    };\n    return _this;\n  }\n\n  _createClass(BigCalendar, [{\n    key: \"addEvent\",\n    value: function addEvent(props) {\n      this.calState.events.push(props);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/_jsxDEV(Calendar, {\n        localizer: localizer,\n        defaultDate: new Date(),\n        defaultView: \"week\",\n        events: this.calState.events,\n        style: {\n          height: \"100vh\",\n          width: \"130vh\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 7\n      }, this);\n    }\n  }]);\n\n  return BigCalendar;\n}(Component);\n\nexport default BigCalendar;","map":{"version":3,"sources":["/Users/akshatdhankher/Desktop/HCI/hci-ClassMates/src/cal-app/src/components/BigCalendar.js"],"names":["React","Component","Calendar","momentLocalizer","moment","useState","meetings","localizer","BigCalendar","calState","events","props","push","Date","height","width"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,aAAP;AACA,SAASC,QAAT,EAAmBC,eAAnB,QAA0C,oBAA1C;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAO,mDAAP;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAAQC,QAAR,QAAuB,eAAvB;;AACA,IAAMC,SAAS,GAAGJ,eAAe,CAACC,MAAD,CAAjC,C,CACA;AACA;;IACMI,W;;;;;;;;;;;;;;;UACJC,Q,GAAW;AACTC,MAAAA,MAAM,EAAEJ;AADC,K;;;;;;WAIX,kBAASK,KAAT,EAAgB;AACf,WAAKF,QAAL,CAAcC,MAAd,CAAqBE,IAArB,CAA0BD,KAA1B;AACA;;;WAED,kBAAS;AACP,0BACE,QAAC,QAAD;AACE,QAAA,SAAS,EAAEJ,SADb;AAEE,QAAA,WAAW,EAAE,IAAIM,IAAJ,EAFf;AAGE,QAAA,WAAW,EAAC,MAHd;AAIE,QAAA,MAAM,EAAE,KAAKJ,QAAL,CAAcC,MAJxB;AAKE,QAAA,KAAK,EAAE;AAAEI,UAAAA,MAAM,EAAE,OAAV;AAAmBC,UAAAA,KAAK,EAAE;AAA1B;AALT;AAAA;AAAA;AAAA;AAAA,cADF;AASD;;;;EAnBuBd,S;;AAqB1B,eAAeO,WAAf","sourcesContent":["import React, { Component } from \"react\";\nimport './style.css';\nimport { Calendar, momentLocalizer } from \"react-big-calendar\";\nimport moment from \"moment\";\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\nimport { useState } from \"react\";\nimport {meetings} from \"./meetings.js\"\nconst localizer = momentLocalizer(moment);\n// Creates a TalkJS user assuming that the currentUser is passed as a prop to our component.\n// The Talk.User object is used to synchronize user data with TalkJS, so we can display it inside the chat UI.\nclass BigCalendar extends Component {\n  calState = {\n    events: meetings\n  };\n\n  addEvent(props) {\n   this.calState.events.push(props);\n  }\n\n  render() {\n    return (\n      <Calendar\n        localizer={localizer}\n        defaultDate={new Date()}\n        defaultView=\"week\"\n        events={this.calState.events}\n        style={{ height: \"100vh\", width: \"130vh\" }}\n      />\n    );\n  }\n}\nexport default BigCalendar;\n"]},"metadata":{},"sourceType":"module"}