{"ast":null,"code":"var _jsxFileName = \"/Users/akshatdhankher/Desktop/HCI/hci-ClassMates/src/ChatPageUI/src/components/TypingIndicator/TypingIndicator.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport { ChannelContext } from 'stream-chat-react';\nimport './TypingIndicator.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport var TypingIndicator = function TypingIndicator() {\n  _s();\n\n  var _useContext = useContext(ChannelContext),\n      client = _useContext.client,\n      typing = _useContext.typing;\n\n  if (!client || !typing) return null;\n  var users = Object.values(typing).filter(function (_ref) {\n    var _client$user;\n\n    var user = _ref.user;\n    return (user === null || user === void 0 ? void 0 : user.id) !== ((_client$user = client.user) === null || _client$user === void 0 ? void 0 : _client$user.id);\n  }).map(function (_ref2) {\n    var user = _ref2.user;\n    return user.name || user.id;\n  });\n  var text = '';\n\n  if (users.length === 1) {\n    text = \"\".concat(users[0], \" is typing\");\n  } else if (users.length === 2) {\n    text = \"\".concat(users[0], \" and \").concat(users[1], \" are typing\");\n  } else if (users.length > 2) {\n    text = \"\".concat(users[0], \" and \").concat(users.length - 1, \" more are typing\");\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"messaging__typing-indicator\",\n    children: [text && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dots\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"dot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, _this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"dot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, _this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"dot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(TypingIndicator, \"qM0q3feDR3Qfrju1qATqQZxcU+o=\");\n\n_c = TypingIndicator;\n\nvar _c;\n\n$RefreshReg$(_c, \"TypingIndicator\");","map":{"version":3,"sources":["/Users/akshatdhankher/Desktop/HCI/hci-ClassMates/src/ChatPageUI/src/components/TypingIndicator/TypingIndicator.js"],"names":["React","useContext","ChannelContext","TypingIndicator","client","typing","users","Object","values","filter","user","id","map","name","text","length"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,cAAT,QAA+B,mBAA/B;AAEA,OAAO,uBAAP;;AAEA,OAAO,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,GAAM;AAAA;;AAAA,oBACRF,UAAU,CAACC,cAAD,CADF;AAAA,MAC3BE,MAD2B,eAC3BA,MAD2B;AAAA,MACnBC,MADmB,eACnBA,MADmB;;AAGnC,MAAI,CAACD,MAAD,IAAW,CAACC,MAAhB,EAAwB,OAAO,IAAP;AAExB,MAAMC,KAAK,GAAGC,MAAM,CAACC,MAAP,CAAcH,MAAd,EACXI,MADW,CACJ;AAAA;;AAAA,QAAGC,IAAH,QAAGA,IAAH;AAAA,WAAc,CAAAA,IAAI,SAAJ,IAAAA,IAAI,WAAJ,YAAAA,IAAI,CAAEC,EAAN,uBAAaP,MAAM,CAACM,IAApB,iDAAa,aAAaC,EAA1B,CAAd;AAAA,GADI,EAEXC,GAFW,CAEP;AAAA,QAAGF,IAAH,SAAGA,IAAH;AAAA,WAAcA,IAAI,CAACG,IAAL,IAAaH,IAAI,CAACC,EAAhC;AAAA,GAFO,CAAd;AAIA,MAAIG,IAAI,GAAG,EAAX;;AAEA,MAAIR,KAAK,CAACS,MAAN,KAAiB,CAArB,EAAwB;AACtBD,IAAAA,IAAI,aAAMR,KAAK,CAAC,CAAD,CAAX,eAAJ;AACD,GAFD,MAEO,IAAIA,KAAK,CAACS,MAAN,KAAiB,CAArB,EAAwB;AAC7BD,IAAAA,IAAI,aAAMR,KAAK,CAAC,CAAD,CAAX,kBAAsBA,KAAK,CAAC,CAAD,CAA3B,gBAAJ;AACD,GAFM,MAEA,IAAIA,KAAK,CAACS,MAAN,GAAe,CAAnB,EAAsB;AAC3BD,IAAAA,IAAI,aAAMR,KAAK,CAAC,CAAD,CAAX,kBAAsBA,KAAK,CAACS,MAAN,GAAe,CAArC,qBAAJ;AACD;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,6BAAf;AAAA,eACGD,IAAI,iBACH;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BACE;AAAM,QAAA,SAAS,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA,eADF,eAEE;AAAM,QAAA,SAAS,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA,eAFF,eAGE;AAAM,QAAA,SAAS,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA,eAHF;AAAA;AAAA;AAAA;AAAA;AAAA,aAFJ,eAQE;AAAA,gBAAMA;AAAN;AAAA;AAAA;AAAA;AAAA,aARF;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AAYD,CA/BM;;GAAMX,e;;KAAAA,e","sourcesContent":["import React, { useContext } from 'react';\nimport { ChannelContext } from 'stream-chat-react';\n\nimport './TypingIndicator.css';\n\nexport const TypingIndicator = () => {\n  const { client, typing } = useContext(ChannelContext);\n\n  if (!client || !typing) return null;\n\n  const users = Object.values(typing)\n    .filter(({ user }) => user?.id !== client.user?.id)\n    .map(({ user }) => user.name || user.id);\n\n  let text = '';\n\n  if (users.length === 1) {\n    text = `${users[0]} is typing`;\n  } else if (users.length === 2) {\n    text = `${users[0]} and ${users[1]} are typing`;\n  } else if (users.length > 2) {\n    text = `${users[0]} and ${users.length - 1} more are typing`;\n  }\n\n  return (\n    <div className=\"messaging__typing-indicator\">\n      {text && (\n        <div className=\"dots\">\n          <span className=\"dot\" />\n          <span className=\"dot\" />\n          <span className=\"dot\" />\n        </div>\n      )}\n      <div>{text}</div>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}