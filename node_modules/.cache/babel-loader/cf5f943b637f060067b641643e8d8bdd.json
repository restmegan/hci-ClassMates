{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n}); // simple utils for working with sequences like Array or string\n\nvar checkType = function checkType(val, result) {\n  return Object.prototype.toString.call(val) === result;\n};\n\nvar is = exports.is = {\n  object: function object(val) {\n    return checkType(val, '[object Object]');\n  },\n  array: function array(val) {\n    return Array.isArray(val);\n  },\n  func: function func(val) {\n    return checkType(val, '[object Function]');\n  },\n  string: function string(val) {\n    return checkType(val, '[object String]');\n  },\n  undefined: function undefined(val) {\n    return typeof val === 'undefined';\n  }\n};\n\nvar isSeq = exports.isSeq = function isSeq(seq) {\n  return is.string(seq) || is.array(seq);\n};\n\nvar head = exports.head = function head(seq) {\n  return isSeq(seq) ? seq[0] : null;\n};\n\nvar first = exports.first = head;\n\nvar tail = exports.tail = function tail(seq) {\n  return isSeq(seq) ? seq.slice(1) : null;\n};\n\nvar rest = exports.rest = tail;\n\nvar last = exports.last = function last(seq) {\n  return isSeq(seq) ? seq[seq.length - 1] : null;\n};","map":{"version":3,"sources":["/Users/annaisthebest/Desktop/hci-ClassMates/node_modules/react-times/lib/utils/func.js"],"names":["Object","defineProperty","exports","value","checkType","val","result","prototype","toString","call","is","object","array","Array","isArray","func","string","undefined","isSeq","seq","head","first","tail","slice","rest","last","length"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C,E,CAGA;;AAEA,IAAIC,SAAS,GAAG,SAASA,SAAT,CAAmBC,GAAnB,EAAwBC,MAAxB,EAAgC;AAC9C,SAAON,MAAM,CAACO,SAAP,CAAiBC,QAAjB,CAA0BC,IAA1B,CAA+BJ,GAA/B,MAAwCC,MAA/C;AACD,CAFD;;AAIA,IAAII,EAAE,GAAGR,OAAO,CAACQ,EAAR,GAAa;AACpBC,EAAAA,MAAM,EAAE,SAASA,MAAT,CAAgBN,GAAhB,EAAqB;AAC3B,WAAOD,SAAS,CAACC,GAAD,EAAM,iBAAN,CAAhB;AACD,GAHmB;AAIpBO,EAAAA,KAAK,EAAE,SAASA,KAAT,CAAeP,GAAf,EAAoB;AACzB,WAAOQ,KAAK,CAACC,OAAN,CAAcT,GAAd,CAAP;AACD,GANmB;AAOpBU,EAAAA,IAAI,EAAE,SAASA,IAAT,CAAcV,GAAd,EAAmB;AACvB,WAAOD,SAAS,CAACC,GAAD,EAAM,mBAAN,CAAhB;AACD,GATmB;AAUpBW,EAAAA,MAAM,EAAE,SAASA,MAAT,CAAgBX,GAAhB,EAAqB;AAC3B,WAAOD,SAAS,CAACC,GAAD,EAAM,iBAAN,CAAhB;AACD,GAZmB;AAapBY,EAAAA,SAAS,EAAE,SAASA,SAAT,CAAmBZ,GAAnB,EAAwB;AACjC,WAAO,OAAOA,GAAP,KAAe,WAAtB;AACD;AAfmB,CAAtB;;AAkBA,IAAIa,KAAK,GAAGhB,OAAO,CAACgB,KAAR,GAAgB,SAASA,KAAT,CAAeC,GAAf,EAAoB;AAC9C,SAAOT,EAAE,CAACM,MAAH,CAAUG,GAAV,KAAkBT,EAAE,CAACE,KAAH,CAASO,GAAT,CAAzB;AACD,CAFD;;AAGA,IAAIC,IAAI,GAAGlB,OAAO,CAACkB,IAAR,GAAe,SAASA,IAAT,CAAcD,GAAd,EAAmB;AAC3C,SAAOD,KAAK,CAACC,GAAD,CAAL,GAAaA,GAAG,CAAC,CAAD,CAAhB,GAAsB,IAA7B;AACD,CAFD;;AAGA,IAAIE,KAAK,GAAGnB,OAAO,CAACmB,KAAR,GAAgBD,IAA5B;;AACA,IAAIE,IAAI,GAAGpB,OAAO,CAACoB,IAAR,GAAe,SAASA,IAAT,CAAcH,GAAd,EAAmB;AAC3C,SAAOD,KAAK,CAACC,GAAD,CAAL,GAAaA,GAAG,CAACI,KAAJ,CAAU,CAAV,CAAb,GAA4B,IAAnC;AACD,CAFD;;AAGA,IAAIC,IAAI,GAAGtB,OAAO,CAACsB,IAAR,GAAeF,IAA1B;;AACA,IAAIG,IAAI,GAAGvB,OAAO,CAACuB,IAAR,GAAe,SAASA,IAAT,CAAcN,GAAd,EAAmB;AAC3C,SAAOD,KAAK,CAACC,GAAD,CAAL,GAAaA,GAAG,CAACA,GAAG,CAACO,MAAJ,GAAa,CAAd,CAAhB,GAAmC,IAA1C;AACD,CAFD","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n// simple utils for working with sequences like Array or string\n\nvar checkType = function checkType(val, result) {\n  return Object.prototype.toString.call(val) === result;\n};\n\nvar is = exports.is = {\n  object: function object(val) {\n    return checkType(val, '[object Object]');\n  },\n  array: function array(val) {\n    return Array.isArray(val);\n  },\n  func: function func(val) {\n    return checkType(val, '[object Function]');\n  },\n  string: function string(val) {\n    return checkType(val, '[object String]');\n  },\n  undefined: function undefined(val) {\n    return typeof val === 'undefined';\n  }\n};\n\nvar isSeq = exports.isSeq = function isSeq(seq) {\n  return is.string(seq) || is.array(seq);\n};\nvar head = exports.head = function head(seq) {\n  return isSeq(seq) ? seq[0] : null;\n};\nvar first = exports.first = head;\nvar tail = exports.tail = function tail(seq) {\n  return isSeq(seq) ? seq.slice(1) : null;\n};\nvar rest = exports.rest = tail;\nvar last = exports.last = function last(seq) {\n  return isSeq(seq) ? seq[seq.length - 1] : null;\n};"]},"metadata":{},"sourceType":"script"}