{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = defaultFilterBy;\n\nvar _isEqual = require('lodash/isEqual');\n\nvar _isEqual2 = _interopRequireDefault(_isEqual);\n\nvar _isFunction = require('lodash/isFunction');\n\nvar _isFunction2 = _interopRequireDefault(_isFunction);\n\nvar _isString = require('lodash/isString');\n\nvar _isString2 = _interopRequireDefault(_isString);\n\nvar _some = require('lodash/some');\n\nvar _some2 = _interopRequireDefault(_some);\n\nvar _stripDiacritics = require('./stripDiacritics');\n\nvar _stripDiacritics2 = _interopRequireDefault(_stripDiacritics);\n\nvar _warn = require('./warn');\n\nvar _warn2 = _interopRequireDefault(_warn);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction isMatch(input, string, props) {\n  if (!props.caseSensitive) {\n    input = input.toLowerCase();\n    string = string.toLowerCase();\n  }\n\n  if (props.ignoreDiacritics) {\n    input = (0, _stripDiacritics2.default)(input);\n    string = (0, _stripDiacritics2.default)(string);\n  }\n\n  return string.indexOf(input) !== -1;\n}\n/**\n * Default algorithm for filtering results.\n */\n\n\nfunction defaultFilterBy(option, state, props) {\n  var selected = state.selected,\n      text = state.text;\n  var filterBy = props.filterBy,\n      labelKey = props.labelKey,\n      multiple = props.multiple; // Don't show selected options in the menu for the multi-select case.\n\n  if (multiple && selected.some(function (o) {\n    return (0, _isEqual2.default)(o, option);\n  })) {\n    return false;\n  }\n\n  var fields = filterBy.slice();\n\n  if ((0, _isFunction2.default)(labelKey) && isMatch(text, labelKey(option), props)) {\n    return true;\n  }\n\n  if ((0, _isString2.default)(labelKey)) {\n    // Add the `labelKey` field to the list of fields if it isn't already there.\n    if (fields.indexOf(labelKey) === -1) {\n      fields.unshift(labelKey);\n    }\n  }\n\n  if ((0, _isString2.default)(option)) {\n    (0, _warn2.default)(fields.length <= 1, 'You cannot filter by properties when `option` is a string.');\n    return isMatch(text, option, props);\n  }\n\n  return (0, _some2.default)(fields, function (field) {\n    var value = option[field];\n\n    if (!(0, _isString2.default)(value)) {\n      (0, _warn2.default)(false, 'Fields passed to `filterBy` should have string values. Value will ' + 'be converted to a string; results may be unexpected.'); // Coerce to string since `toString` isn't null-safe.\n\n      value = value + '';\n    }\n\n    return isMatch(text, value, props);\n  });\n}","map":{"version":3,"sources":["/Users/annaisthebest/Desktop/hci-ClassMates/node_modules/react-bootstrap-typeahead/lib/utils/defaultFilterBy.js"],"names":["Object","defineProperty","exports","value","default","defaultFilterBy","_isEqual","require","_isEqual2","_interopRequireDefault","_isFunction","_isFunction2","_isString","_isString2","_some","_some2","_stripDiacritics","_stripDiacritics2","_warn","_warn2","obj","__esModule","isMatch","input","string","props","caseSensitive","toLowerCase","ignoreDiacritics","indexOf","option","state","selected","text","filterBy","labelKey","multiple","some","o","fields","slice","unshift","length","field"],"mappings":"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","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = defaultFilterBy;\n\nvar _isEqual = require('lodash/isEqual');\n\nvar _isEqual2 = _interopRequireDefault(_isEqual);\n\nvar _isFunction = require('lodash/isFunction');\n\nvar _isFunction2 = _interopRequireDefault(_isFunction);\n\nvar _isString = require('lodash/isString');\n\nvar _isString2 = _interopRequireDefault(_isString);\n\nvar _some = require('lodash/some');\n\nvar _some2 = _interopRequireDefault(_some);\n\nvar _stripDiacritics = require('./stripDiacritics');\n\nvar _stripDiacritics2 = _interopRequireDefault(_stripDiacritics);\n\nvar _warn = require('./warn');\n\nvar _warn2 = _interopRequireDefault(_warn);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction isMatch(input, string, props) {\n  if (!props.caseSensitive) {\n    input = input.toLowerCase();\n    string = string.toLowerCase();\n  }\n\n  if (props.ignoreDiacritics) {\n    input = (0, _stripDiacritics2.default)(input);\n    string = (0, _stripDiacritics2.default)(string);\n  }\n\n  return string.indexOf(input) !== -1;\n}\n\n/**\n * Default algorithm for filtering results.\n */\nfunction defaultFilterBy(option, state, props) {\n  var selected = state.selected,\n      text = state.text;\n  var filterBy = props.filterBy,\n      labelKey = props.labelKey,\n      multiple = props.multiple;\n\n  // Don't show selected options in the menu for the multi-select case.\n\n  if (multiple && selected.some(function (o) {\n    return (0, _isEqual2.default)(o, option);\n  })) {\n    return false;\n  }\n\n  var fields = filterBy.slice();\n\n  if ((0, _isFunction2.default)(labelKey) && isMatch(text, labelKey(option), props)) {\n    return true;\n  }\n\n  if ((0, _isString2.default)(labelKey)) {\n    // Add the `labelKey` field to the list of fields if it isn't already there.\n    if (fields.indexOf(labelKey) === -1) {\n      fields.unshift(labelKey);\n    }\n  }\n\n  if ((0, _isString2.default)(option)) {\n    (0, _warn2.default)(fields.length <= 1, 'You cannot filter by properties when `option` is a string.');\n\n    return isMatch(text, option, props);\n  }\n\n  return (0, _some2.default)(fields, function (field) {\n    var value = option[field];\n\n    if (!(0, _isString2.default)(value)) {\n      (0, _warn2.default)(false, 'Fields passed to `filterBy` should have string values. Value will ' + 'be converted to a string; results may be unexpected.');\n\n      // Coerce to string since `toString` isn't null-safe.\n      value = value + '';\n    }\n\n    return isMatch(text, value, props);\n  });\n}"]},"metadata":{},"sourceType":"script"}