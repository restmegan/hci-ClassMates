{"ast":null,"code":"import _classCallCheck from \"/Users/annaisthebest/Desktop/hci-ClassMates/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/annaisthebest/Desktop/hci-ClassMates/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/Users/annaisthebest/Desktop/hci-ClassMates/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/annaisthebest/Desktop/hci-ClassMates/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/annaisthebest/Desktop/hci-ClassMates/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/Users/annaisthebest/Desktop/hci-ClassMates/src/cal-app/src/components/IMPopUp.js\";\nimport React from 'react';\nimport './style.css';\nimport { Multiselect } from 'multiselect-react-dropdown';\nimport TimePicker from 'react-times';\nimport Button from './Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar currentDate = new Date();\nvar currentTime = new Date();\n\nvar IMPopup = /*#__PURE__*/function (_React$Component) {\n  _inherits(IMPopup, _React$Component);\n\n  var _super = _createSuper(IMPopup);\n\n  function IMPopup(props) {\n    var _this;\n\n    _classCallCheck(this, IMPopup);\n\n    _this = _super.call(this, props);\n\n    _this.myChangeHandler = function (event) {\n      _this.setState({\n        meetingTitle: event.target.value\n      });\n    };\n\n    _this.state = {\n      checked: false,\n      meetingTitle: \"\",\n      startDate: new Date(),\n      endDate: new Date(),\n      description: \"\",\n      options: [{\n        name: 'IS4300',\n        id: 1\n      }, {\n        name: 'CS3000',\n        id: 2\n      }, {\n        name: 'Lucy Eaton',\n        id: 3\n      }, {\n        name: 'John Smith',\n        id: 4\n      }, {\n        name: 'Study Squad(Lucy, John, ...)',\n        id: 5\n      }, {\n        name: 'Lucy Eaton, Ed Jones',\n        id: 6\n      }, {\n        name: 'Amanda Snow',\n        id: 7\n      }]\n    };\n    _this.myChangeHandler = _this.myCHangeHandler.bind(_assertThisInitialized(_this));\n    _this.onFormSubmitS = _this.onFormSubmitS.bind(_assertThisInitialized(_this));\n    _this.onFormSubmitE = _this.onFormSubmitE.bind(_assertThisInitialized(_this));\n    _this.handleDChange = _this.handleDChange.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(IMPopup, [{\n    key: \"alertS\",\n    value: function alertS(e) {\n      alert('Meeting has been scheduled SUCCESSFULLY! \\nPlease, press Close on this page and Cancel on the scheduling window to continue(back-end tbd)');\n    }\n  }, {\n    key: \"handleDChange\",\n    value: function handleDChange(event) {\n      this.setState({\n        description: event.target.value\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"popup\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"popup_inner\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Schedule a Study Group\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"Meeting Title:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              onChange: this.myChangeHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 7\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"Select Participants:\", /*#__PURE__*/_jsxDEV(Multiselect, {\n              options: this.state.options // Options to display in the dropdown\n              ,\n              selectedValues: this.state.selectedValue // Preselected value to persist in dropdown\n              ,\n              onSelect: this.onSelect // Function will trigger on select event\n              ,\n              onRemove: this.onRemove // Function will trigger on remove event\n              ,\n              displayValue: \"name\" // Property name to display in the dropdown options\n\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 7\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"Description(optional) :\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n              value: this.state.description,\n              onChange: this.handleDChange,\n              rows: 5,\n              cols: 30\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 7\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              name: \"Cancel\",\n              onClick: this.props.closePopup\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              name: \"Start an Instart Meeting\",\n              onClick: this.alertS //  onClick={BigCalendar.addEvent({start: this.state.startDate, end: this.state.endDate, title: this.state.meetingTitle})}\n\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 7\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 7\n      }, this);\n    }\n  }]);\n\n  return IMPopup;\n}(React.Component);\n\nexport default IMPopup;","map":{"version":3,"sources":["/Users/annaisthebest/Desktop/hci-ClassMates/src/cal-app/src/components/IMPopUp.js"],"names":["React","Multiselect","TimePicker","Button","currentDate","Date","currentTime","IMPopup","props","myChangeHandler","event","setState","meetingTitle","target","value","state","checked","startDate","endDate","description","options","name","id","myCHangeHandler","bind","onFormSubmitS","onFormSubmitE","handleDChange","e","alert","selectedValue","onSelect","onRemove","closePopup","alertS","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './style.css';\nimport { Multiselect } from 'multiselect-react-dropdown';\nimport TimePicker from 'react-times';\nimport Button from './Button';\nlet currentDate = new Date();\nlet currentTime = new Date();\n\n\nclass IMPopup extends React.Component {\n\n  constructor (props) {\n    super(props)\n    this.state = {\n      checked: false,\n      meetingTitle: \"\",\n      startDate: new Date(),\n      endDate: new Date(),\n      description: \"\",\n      options: [{name: 'IS4300', id: 1},{name: 'CS3000', id: 2},{name: 'Lucy Eaton', id: 3},{name: 'John Smith', id: 4},\n      {name: 'Study Squad(Lucy, John, ...)', id: 5},{name: 'Lucy Eaton, Ed Jones', id: 6},{name: 'Amanda Snow', id: 7}]\n    };\n    this.myChangeHandler = this.myCHangeHandler.bind(this);\n    this.onFormSubmitS = this.onFormSubmitS.bind(this);\n    this.onFormSubmitE = this.onFormSubmitE.bind(this);\n    this.handleDChange = this.handleDChange.bind(this);\n  }\n\n  myChangeHandler = (event) => {\n    this.setState({\n      meetingTitle : event.target.value\n    })\n  }\n\n  alertS(e) {\n    alert('Meeting has been scheduled SUCCESSFULLY! \\nPlease, press Close on this page and Cancel on the scheduling window to continue(back-end tbd)')\n  }\n\n\n  handleDChange(event) {\n    this.setState({ description: event.target.value });\n  }\n\n  render() {\n    return (\n      <div className='popup'>\n      <div className='popup_inner'>\n      <h1>{\"Schedule a Study Group\"}</h1>\n      <div>\n      Meeting Title:\n      <input\n      type=\"text\"\n      onChange={this.myChangeHandler}\n      />\n      </div>\n      <div>\n      Select Participants:\n      <Multiselect\n      options={this.state.options} // Options to display in the dropdown\n      selectedValues={this.state.selectedValue} // Preselected value to persist in dropdown\n      onSelect={this.onSelect} // Function will trigger on select event\n      onRemove={this.onRemove} // Function will trigger on remove event\n      displayValue=\"name\" // Property name to display in the dropdown options\n      />\n      </div>\n      <div>\n      Description(optional) :\n      <textarea\n      value={this.state.description}\n      onChange={this.handleDChange}\n      rows={5}\n      cols={30}\n      />\n      </div>\n      <div>\n      <Button\n      name = \"Cancel\"\n      onClick={this.props.closePopup}\n      />\n      <Button\n      name = \"Start an Instart Meeting\"\n      onClick={this.alertS}\n      //  onClick={BigCalendar.addEvent({start: this.state.startDate, end: this.state.endDate, title: this.state.meetingTitle})}\n      />\n      </div>\n      </div>\n      </div>\n    );\n  }\n}\n\nexport default IMPopup;\n"]},"metadata":{},"sourceType":"module"}