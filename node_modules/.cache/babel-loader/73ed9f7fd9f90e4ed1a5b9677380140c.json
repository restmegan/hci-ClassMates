{"ast":null,"code":"import _objectSpread from \"/Users/akshatdhankher/Desktop/HCI/hci-ClassMates/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/Users/akshatdhankher/Desktop/HCI/hci-ClassMates/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/akshatdhankher/Desktop/HCI/hci-ClassMates/src/ChatPageUI/src/App.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { StreamChat } from 'stream-chat';\nimport { Chat, Channel, ChannelList, MessageList, MessageInput, Window } from 'stream-chat-react';\nimport { useChecklist } from './ChecklistTasks';\nimport 'stream-chat-react/dist/css/index.css';\nimport './App.css';\nimport { CreateChannel, CustomMessage, MessagingChannelHeader, MessagingChannelList, MessagingChannelPreview, MessagingInput, MessagingThread } from './components'; // import { getRandomImage } from './assets';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar urlParams = new URLSearchParams(window.location.search);\nvar apiKey = 'e86kwpdunrzr'; // This is tied to the dhankher.a account\n\nvar user = urlParams.get('user') || process.env.REACT_APP_USER_ID;\nvar userToken = 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjoibmFtZWxlc3MtdGh1bmRlci03In0.9U6fCnGgH8gawPO7yk2DHf2-NMQhqi78YT9DbzsfnK8';\nvar targetOrigin = urlParams.get('target_origin') || process.env.REACT_APP_TARGET_ORIGIN;\nvar noChannelNameFilter = urlParams.get('no_channel_name_filter') || false;\nvar options = {\n  state: true,\n  watch: true,\n  presence: true,\n  limit: 8\n};\nvar sort = {\n  last_message_at: -1,\n  updated_at: -1,\n  cid: 1\n}; // Instantiates a client-side client\n\nvar chatClient = StreamChat.getInstance(apiKey); // Adding some dummy users to the userbase:\n\nvar johnSmith = {\n  id: \"john-smith\",\n  name: \"John Smith\",\n  image: \"https://demo.talkjs.com/img/sebastian.jpg\"\n};\nvar lucyEaton = {\n  id: \"lucy-eaton\",\n  name: \"Lucy Eaton\",\n  image: \"https://thumbs.dreamstime.com/b/friendly-adult-casual-dressed-business-woman-student-girl-standing-straight-headshot-portrait-office-183889436.jpg\"\n};\nvar janeDoe = {\n  id: \"jane-doe\",\n  name: \"Jane Doe\",\n  image: \"https://previews.123rf.com/images/avemario/avemario1609/avemario160900319/62999486-smiling-teenage-girl-working-on-her-generic-laptop-computer-happy-cheerful-female-college-student-si.jpg\"\n};\nvar edJones = {\n  id: \"ed-jones\",\n  name: \"Ed Jones\",\n  image: \"https://thumbs.dreamstime.com/z/knappe-student-53808413.jpg\"\n};\nchatClient.connectUser(johnSmith, chatClient.devToken(\"john-smith\"));\nchatClient.disconnect();\nchatClient.connectUser(lucyEaton, chatClient.devToken(\"lucy-eaton\"));\nchatClient.disconnect();\nchatClient.connectUser(janeDoe, chatClient.devToken(\"jane-doe\"));\nchatClient.disconnect();\nchatClient.connectUser(edJones, chatClient.devToken(\"ed-jones\"));\nchatClient.disconnect(); //This is the test user who is logged into ClassMates\n\nvar testUser = {\n  id: 'nameless-thunder-7',\n  name: 'Alice Jefferson',\n  image: 'https://getstream.io/random_png/?id=nameless-thunder-7&name=nameless-thunder-7'\n};\nchatClient.connectUser(testUser, userToken);\nvar filters = noChannelNameFilter ? {\n  type: 'messaging',\n  members: {\n    $in: [testUser, johnSmith, lucyEaton, janeDoe]\n  }\n} : {\n  type: 'messaging'\n};\n\nvar App = function App() {\n  _s();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isCreating = _useState2[0],\n      setIsCreating = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isMobileNavVisible = _useState4[0],\n      setMobileNav = _useState4[1];\n\n  var _useState5 = useState('dark'),\n      _useState6 = _slicedToArray(_useState5, 2),\n      theme = _useState6[0],\n      setTheme = _useState6[1];\n\n  useChecklist(chatClient, targetOrigin);\n  useEffect(function () {\n    var handleThemeChange = function handleThemeChange(_ref) {\n      var data = _ref.data,\n          origin = _ref.origin;\n\n      // handle events only from trusted origin\n      if (origin === targetOrigin) {\n        if (data === 'light' || data === 'dark') {\n          setTheme(data);\n        }\n      }\n    };\n\n    window.addEventListener('message', handleThemeChange);\n    return function () {\n      return window.removeEventListener('message', handleThemeChange);\n    };\n  }, []);\n  useEffect(function () {\n    var mobileChannelList = document.querySelector('#mobile-channel-list');\n\n    if (isMobileNavVisible && mobileChannelList) {\n      mobileChannelList.classList.add('show');\n      document.body.style.overflow = 'hidden';\n    } else if (!isMobileNavVisible && mobileChannelList) {\n      mobileChannelList.classList.remove('show');\n      document.body.style.overflow = 'auto';\n    }\n  }, [isMobileNavVisible]);\n\n  var toggleMobile = function toggleMobile() {\n    return setMobileNav(!isMobileNavVisible);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Chat, {\n    client: chatClient,\n    theme: \"messaging \".concat(theme),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"mobile-channel-list\",\n      onClick: toggleMobile,\n      children: /*#__PURE__*/_jsxDEV(ChannelList, {\n        filters: filters,\n        sort: sort,\n        options: options,\n        List: function List(props) {\n          return /*#__PURE__*/_jsxDEV(MessagingChannelList, _objectSpread(_objectSpread({}, props), {}, {\n            onCreateChannel: function onCreateChannel() {\n              return setIsCreating(!isCreating);\n            }\n          }), void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 28\n          }, _this);\n        },\n        Preview: function Preview(props) {\n          return /*#__PURE__*/_jsxDEV(MessagingChannelPreview, _objectSpread(_objectSpread({}, props), {}, {\n            setIsCreating: setIsCreating\n          }), void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 31\n          }, _this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Channel, {\n        maxNumberOfFiles: 10,\n        multipleUploads: true,\n        children: [isCreating && /*#__PURE__*/_jsxDEV(CreateChannel, {\n          toggleMobile: toggleMobile,\n          onClose: function onClose() {\n            return setIsCreating(false);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 26\n        }, _this), /*#__PURE__*/_jsxDEV(Window, {\n          children: [/*#__PURE__*/_jsxDEV(MessagingChannelHeader, {\n            theme: theme,\n            toggleMobile: toggleMobile\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(MessageList, {\n            Message: CustomMessage,\n            TypingIndicator: function TypingIndicator() {\n              return null;\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(MessageInput, {\n            focus: true,\n            Input: MessagingInput\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(MessagingThread, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(App, \"8N30PtaU3OJg8ulk/5dL2BpClKM=\", false, function () {\n  return [useChecklist];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/akshatdhankher/Desktop/HCI/hci-ClassMates/src/ChatPageUI/src/App.js"],"names":["React","useEffect","useState","StreamChat","Chat","Channel","ChannelList","MessageList","MessageInput","Window","useChecklist","CreateChannel","CustomMessage","MessagingChannelHeader","MessagingChannelList","MessagingChannelPreview","MessagingInput","MessagingThread","urlParams","URLSearchParams","window","location","search","apiKey","user","get","process","env","REACT_APP_USER_ID","userToken","targetOrigin","REACT_APP_TARGET_ORIGIN","noChannelNameFilter","options","state","watch","presence","limit","sort","last_message_at","updated_at","cid","chatClient","getInstance","johnSmith","id","name","image","lucyEaton","janeDoe","edJones","connectUser","devToken","disconnect","testUser","filters","type","members","$in","App","isCreating","setIsCreating","isMobileNavVisible","setMobileNav","theme","setTheme","handleThemeChange","data","origin","addEventListener","removeEventListener","mobileChannelList","document","querySelector","classList","add","body","style","overflow","remove","toggleMobile","props"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { StreamChat } from 'stream-chat';\nimport { Chat, Channel, ChannelList, MessageList, MessageInput, Window } from 'stream-chat-react';\nimport { useChecklist } from './ChecklistTasks';\n\nimport 'stream-chat-react/dist/css/index.css';\nimport './App.css';\n\nimport {\n  CreateChannel,\n  CustomMessage,\n  MessagingChannelHeader,\n  MessagingChannelList,\n  MessagingChannelPreview,\n  MessagingInput,\n  MessagingThread,\n} from './components';\n\n// import { getRandomImage } from './assets';\n\nconst urlParams = new URLSearchParams(window.location.search);\nconst apiKey = 'e86kwpdunrzr'; // This is tied to the dhankher.a account\nconst user = urlParams.get('user') || process.env.REACT_APP_USER_ID;\n\nconst userToken = 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjoibmFtZWxlc3MtdGh1bmRlci03In0.9U6fCnGgH8gawPO7yk2DHf2-NMQhqi78YT9DbzsfnK8';\n\nconst targetOrigin = urlParams.get('target_origin') || process.env.REACT_APP_TARGET_ORIGIN;\nconst noChannelNameFilter = urlParams.get('no_channel_name_filter') || false;\n\nconst options = { state: true, watch: true, presence: true, limit: 8 };\nconst sort = {\n  last_message_at: -1,\n  updated_at: -1,\n  cid: 1,\n};\n\n\n// Instantiates a client-side client\nconst chatClient = StreamChat.getInstance(apiKey);\n\n// Adding some dummy users to the userbase:\nconst johnSmith = {id: \"john-smith\", name: \"John Smith\", image: \"https://demo.talkjs.com/img/sebastian.jpg\"};\nconst lucyEaton = {id: \"lucy-eaton\", name: \"Lucy Eaton\", image: \"https://thumbs.dreamstime.com/b/friendly-adult-casual-dressed-business-woman-student-girl-standing-straight-headshot-portrait-office-183889436.jpg\"};\nconst janeDoe = {id: \"jane-doe\", name: \"Jane Doe\", image: \"https://previews.123rf.com/images/avemario/avemario1609/avemario160900319/62999486-smiling-teenage-girl-working-on-her-generic-laptop-computer-happy-cheerful-female-college-student-si.jpg\"};\nconst edJones = {id: \"ed-jones\", name: \"Ed Jones\", image: \"https://thumbs.dreamstime.com/z/knappe-student-53808413.jpg\"};\nchatClient.connectUser(johnSmith, chatClient.devToken(\"john-smith\"));\nchatClient.disconnect();\nchatClient.connectUser(lucyEaton, chatClient.devToken(\"lucy-eaton\"));\nchatClient.disconnect();\nchatClient.connectUser(janeDoe, chatClient.devToken(\"jane-doe\"));\nchatClient.disconnect();\nchatClient.connectUser(edJones, chatClient.devToken(\"ed-jones\"));\nchatClient.disconnect();\n\n//This is the test user who is logged into ClassMates\nconst testUser = {\n  id: 'nameless-thunder-7',\n  name: 'Alice Jefferson',\n  image: 'https://getstream.io/random_png/?id=nameless-thunder-7&name=nameless-thunder-7'\n};\n\nchatClient.connectUser(testUser, userToken);\n\nconst filters = noChannelNameFilter ? { type: 'messaging', members: { $in: [testUser, johnSmith, lucyEaton, janeDoe] } } : { type: 'messaging'};\n\nconst App = () => {\n  const [isCreating, setIsCreating] = useState(false);\n  const [isMobileNavVisible, setMobileNav] = useState(false);\n  const [theme, setTheme] = useState('dark');\n\n  useChecklist(chatClient, targetOrigin);\n\n  useEffect(() => {\n    const handleThemeChange = ({ data, origin }) => {\n      // handle events only from trusted origin\n      if (origin === targetOrigin) {\n        if (data === 'light' || data === 'dark') {\n          setTheme(data);\n        }\n      }\n    };\n\n    window.addEventListener('message', handleThemeChange);\n    return () => window.removeEventListener('message', handleThemeChange);\n  }, []);\n\n  useEffect(() => {\n    const mobileChannelList = document.querySelector('#mobile-channel-list');\n    if (isMobileNavVisible && mobileChannelList) {\n      mobileChannelList.classList.add('show');\n      document.body.style.overflow = 'hidden';\n    } else if (!isMobileNavVisible && mobileChannelList) {\n      mobileChannelList.classList.remove('show');\n      document.body.style.overflow = 'auto';\n    }\n  }, [isMobileNavVisible]);\n\n  const toggleMobile = () => setMobileNav(!isMobileNavVisible);\n\n  return (\n    <Chat client={chatClient} theme={`messaging ${theme}`}>\n      <div id='mobile-channel-list' onClick={toggleMobile}>\n        <ChannelList\n          filters={filters}\n          sort={sort}\n          options={options}\n          List={(props) => <MessagingChannelList {...props} onCreateChannel={() => setIsCreating(!isCreating)} />}\n          Preview={(props) => <MessagingChannelPreview {...props} {...{ setIsCreating }} />}\n        />\n      </div>\n      <div>\n        <Channel maxNumberOfFiles={10} multipleUploads={true}>\n          {isCreating && <CreateChannel toggleMobile={toggleMobile} onClose={() => setIsCreating(false)} />}\n          <Window>\n            <MessagingChannelHeader theme={theme} toggleMobile={toggleMobile} />\n            <MessageList Message={CustomMessage} TypingIndicator={() => null} />\n            <MessageInput focus Input={MessagingInput} />\n          </Window>\n          <MessagingThread />\n        </Channel>\n      </div>\n    </Chat>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}