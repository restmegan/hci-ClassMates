{"ast":null,"code":"import _toConsumableArray from \"/Users/akshatdhankher/Desktop/HCI/hci-ClassMates/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"/Users/akshatdhankher/Desktop/HCI/hci-ClassMates/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/akshatdhankher/Desktop/HCI/hci-ClassMates/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/akshatdhankher/Desktop/HCI/hci-ClassMates/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/akshatdhankher/Desktop/HCI/hci-ClassMates/src/streamchats-code/src/components/CreateChannel/CreateChannel.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useContext, useEffect, useRef, useState } from 'react';\nimport { Avatar, ChatContext } from 'stream-chat-react';\nimport _debounce from 'lodash.debounce';\nimport { XButton, XButtonBackground } from '../../assets';\nimport './CreateChannel.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar UserResult = function UserResult(_ref) {\n  var user = _ref.user;\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: \"messaging-create-channel__user-result\",\n    children: [/*#__PURE__*/_jsxDEV(Avatar, {\n      image: user.image,\n      size: 40\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 5\n    }, _this), user.online && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messaging-create-channel__user-result-online\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 21\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messaging-create-channel__user-result__details\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: user.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 7\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 3\n  }, _this);\n};\n\n_c = UserResult;\n\nvar CreateChannel = function CreateChannel(_ref2) {\n  _s();\n\n  var onClose = _ref2.onClose,\n      toggleMobile = _ref2.toggleMobile;\n\n  var _useContext = useContext(ChatContext),\n      client = _useContext.client,\n      setActiveChannel = _useContext.setActiveChannel;\n\n  var _useState = useState(undefined),\n      _useState2 = _slicedToArray(_useState, 2),\n      focusedUser = _useState2[0],\n      setFocusedUser = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      inputText = _useState4[0],\n      setInputText = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      resultsOpen = _useState6[0],\n      setResultsOpen = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      searchEmpty = _useState8[0],\n      setSearchEmpty = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      searching = _useState10[0],\n      setSearching = _useState10[1];\n\n  var _useState11 = useState([]),\n      _useState12 = _slicedToArray(_useState11, 2),\n      selectedUsers = _useState12[0],\n      setSelectedUsers = _useState12[1];\n\n  var _useState13 = useState([]),\n      _useState14 = _slicedToArray(_useState13, 2),\n      users = _useState14[0],\n      setUsers = _useState14[1];\n\n  var inputRef = useRef();\n\n  var clearState = function clearState() {\n    setInputText('');\n    setResultsOpen(false);\n    setSearchEmpty(false);\n  };\n\n  useEffect(function () {\n    var clickListener = function clickListener() {\n      if (resultsOpen) clearState();\n    };\n\n    document.addEventListener('click', clickListener);\n    return function () {\n      return document.removeEventListener('click', clickListener);\n    };\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  var findUsers = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!searching) {\n                _context.next = 2;\n                break;\n              }\n\n              return _context.abrupt(\"return\");\n\n            case 2:\n              setSearching(true);\n              _context.prev = 3;\n              _context.next = 6;\n              return client.queryUsers({\n                id: {\n                  $ne: client.userID\n                },\n                $and: [{\n                  name: {\n                    $autocomplete: inputText\n                  }\n                }, {\n                  name: {\n                    $nin: ['Daniel Smith', 'Kevin Rosen', 'Jen Alexander']\n                  }\n                }]\n              }, {\n                id: 1\n              }, {\n                limit: 6\n              });\n\n            case 6:\n              response = _context.sent;\n\n              if (!response.users.length) {\n                setSearchEmpty(true);\n              } else {\n                setSearchEmpty(false);\n                setUsers(response.users);\n              }\n\n              setResultsOpen(true);\n              _context.next = 14;\n              break;\n\n            case 11:\n              _context.prev = 11;\n              _context.t0 = _context[\"catch\"](3);\n              console.log({\n                error: _context.t0\n              });\n\n            case 14:\n              setSearching(false);\n\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[3, 11]]);\n    }));\n\n    return function findUsers() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var findUsersDebounce = _debounce(findUsers, 100, {\n    trailing: true\n  });\n\n  useEffect(function () {\n    if (inputText) {\n      findUsersDebounce();\n    }\n  }, [inputText]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  var createChannel = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var selectedUsersIds, conversation;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              selectedUsersIds = selectedUsers.map(function (u) {\n                return u.id;\n              });\n\n              if (selectedUsersIds.length) {\n                _context2.next = 3;\n                break;\n              }\n\n              return _context2.abrupt(\"return\");\n\n            case 3:\n              _context2.next = 5;\n              return client.channel('messaging', {\n                members: [].concat(_toConsumableArray(selectedUsersIds), [client.userID])\n              });\n\n            case 5:\n              conversation = _context2.sent;\n              _context2.next = 8;\n              return conversation.watch();\n\n            case 8:\n              setActiveChannel(conversation);\n              setSelectedUsers([]);\n              setUsers([]);\n              onClose();\n\n            case 12:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function createChannel() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  var addUser = function addUser(u) {\n    var isAlreadyAdded = selectedUsers.find(function (user) {\n      return user.id === u.id;\n    });\n    if (isAlreadyAdded) return;\n    setSelectedUsers([].concat(_toConsumableArray(selectedUsers), [u]));\n    setResultsOpen(false);\n    setInputText('');\n    inputRef.current.focus();\n  };\n\n  var removeUser = function removeUser(user) {\n    var newUsers = selectedUsers.filter(function (item) {\n      return item.id !== user.id;\n    });\n    setSelectedUsers(newUsers);\n    inputRef.current.focus();\n  };\n\n  var handleKeyDown = useCallback(function (e) {\n    // check for up(38) or down(40) key\n    if (e.which === 38) {\n      setFocusedUser(function (prevFocused) {\n        if (prevFocused === undefined) return 0;\n        return prevFocused === 0 ? users.length - 1 : prevFocused - 1;\n      });\n    }\n\n    if (e.which === 40) {\n      setFocusedUser(function (prevFocused) {\n        if (prevFocused === undefined) return 0;\n        return prevFocused === users.length - 1 ? 0 : prevFocused + 1;\n      });\n    }\n\n    if (e.which === 13) {\n      e.preventDefault();\n\n      if (focusedUser !== undefined) {\n        addUser(users[focusedUser]);\n        return setFocusedUser(undefined);\n      }\n    }\n  }, [users, focusedUser] // eslint-disable-line\n  );\n  useEffect(function () {\n    document.addEventListener('keydown', handleKeyDown, false);\n    return function () {\n      return document.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [handleKeyDown]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"messaging-create-channel\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"messaging-create-channel__left\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"messaging-create-channel__left-text\",\n          children: \"To: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"users-input-container\",\n          children: [!!(selectedUsers === null || selectedUsers === void 0 ? void 0 : selectedUsers.length) && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"messaging-create-channel__users\",\n            children: selectedUsers.map(function (user) {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"messaging-create-channel__user\",\n                onClick: function onClick() {\n                  return removeUser(user);\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"messaging-create-channel__user-text\",\n                  children: user.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 162,\n                  columnNumber: 21\n                }, _this), /*#__PURE__*/_jsxDEV(XButton, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 163,\n                  columnNumber: 21\n                }, _this)]\n              }, user.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 19\n              }, _this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 15\n          }, _this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: addUser,\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              autoFocus: true,\n              ref: inputRef,\n              value: inputText,\n              onChange: function onChange(e) {\n                return setInputText(e.target.value);\n              },\n              placeholder: !selectedUsers.length ? 'Start typing for suggestions' : '',\n              type: \"text\",\n              className: \"messaging-create-channel__input\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"close-mobile-create\",\n          onClick: function onClick() {\n            return toggleMobile();\n          },\n          children: /*#__PURE__*/_jsxDEV(XButtonBackground, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"create-channel-button\",\n        onClick: createChannel,\n        children: \"Start chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, _this), inputText && /*#__PURE__*/_jsxDEV(\"main\", {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"messaging-create-channel__user-results\",\n        children: [!!(users === null || users === void 0 ? void 0 : users.length) && !searchEmpty && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: users.map(function (user, i) {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"messaging-create-channel__user-result \".concat(focusedUser === i && 'focused'),\n              onClick: function onClick() {\n                return addUser(user);\n              },\n              children: /*#__PURE__*/_jsxDEV(UserResult, {\n                user: user\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 21\n              }, _this)\n            }, user.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 19\n            }, _this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 15\n        }, _this), searchEmpty && /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: function onClick() {\n            inputRef.current.focus();\n            clearState();\n          },\n          className: \"messaging-create-channel__user-result empty\",\n          children: \"No people found...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 15\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 11\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 9\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 153,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(CreateChannel, \"VeodQY0dBZb8S8saTES1ascRtMY=\");\n\n_c2 = CreateChannel;\nexport default _c3 = /*#__PURE__*/React.memo(CreateChannel);\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"UserResult\");\n$RefreshReg$(_c2, \"CreateChannel\");\n$RefreshReg$(_c3, \"%default%\");","map":{"version":3,"sources":["/Users/akshatdhankher/Desktop/HCI/hci-ClassMates/src/streamchats-code/src/components/CreateChannel/CreateChannel.js"],"names":["React","useCallback","useContext","useEffect","useRef","useState","Avatar","ChatContext","_debounce","XButton","XButtonBackground","UserResult","user","image","online","name","CreateChannel","onClose","toggleMobile","client","setActiveChannel","undefined","focusedUser","setFocusedUser","inputText","setInputText","resultsOpen","setResultsOpen","searchEmpty","setSearchEmpty","searching","setSearching","selectedUsers","setSelectedUsers","users","setUsers","inputRef","clearState","clickListener","document","addEventListener","removeEventListener","findUsers","queryUsers","id","$ne","userID","$and","$autocomplete","$nin","limit","response","length","console","log","error","findUsersDebounce","trailing","createChannel","selectedUsersIds","map","u","channel","members","conversation","watch","addUser","isAlreadyAdded","find","current","focus","removeUser","newUsers","filter","item","handleKeyDown","e","which","prevFocused","preventDefault","target","value","i","memo"],"mappings":"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","sourcesContent":["import React, { useCallback, useContext, useEffect, useRef, useState } from 'react';\nimport { Avatar, ChatContext } from 'stream-chat-react';\nimport _debounce from 'lodash.debounce';\n\nimport { XButton, XButtonBackground } from '../../assets';\n\nimport './CreateChannel.css';\n\nconst UserResult = ({ user }) => (\n  <li className='messaging-create-channel__user-result'>\n    <Avatar image={user.image} size={40} />\n    {user.online && <div className='messaging-create-channel__user-result-online' />}\n    <div className='messaging-create-channel__user-result__details'>\n      <span>{user.name}</span>\n      {/* <span className='messaging-create-channel__user-result__details__last-seen'>{user.online}</span> */}\n    </div>\n  </li>\n);\n\nconst CreateChannel = ({ onClose, toggleMobile }) => {\n  const { client, setActiveChannel } = useContext(ChatContext);\n\n  const [focusedUser, setFocusedUser] = useState(undefined);\n  const [inputText, setInputText] = useState('');\n  const [resultsOpen, setResultsOpen] = useState(false);\n  const [searchEmpty, setSearchEmpty] = useState(false);\n  const [searching, setSearching] = useState(false);\n  const [selectedUsers, setSelectedUsers] = useState([]);\n  const [users, setUsers] = useState([]);\n\n  const inputRef = useRef();\n\n  const clearState = () => {\n    setInputText('');\n    setResultsOpen(false);\n    setSearchEmpty(false);\n  };\n\n  useEffect(() => {\n    const clickListener = () => {\n      if (resultsOpen) clearState();\n    };\n\n    document.addEventListener('click', clickListener);\n\n    return () => document.removeEventListener('click', clickListener);\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const findUsers = async () => {\n    if (searching) return;\n    setSearching(true);\n\n    try {\n      const response = await client.queryUsers(\n        {\n          id: { $ne: client.userID },\n          $and: [{ name: { $autocomplete: inputText } }, { name: { $nin: ['Daniel Smith', 'Kevin Rosen', 'Jen Alexander'] } }],\n        },\n        { id: 1 },\n        { limit: 6 },\n      );\n\n      if (!response.users.length) {\n        setSearchEmpty(true);\n      } else {\n        setSearchEmpty(false);\n        setUsers(response.users);\n      }\n\n      setResultsOpen(true);\n    } catch (error) {\n      console.log({ error });\n    }\n\n    setSearching(false);\n  };\n\n  const findUsersDebounce = _debounce(findUsers, 100, {\n    trailing: true,\n  });\n\n  useEffect(() => {\n    if (inputText) {\n      findUsersDebounce();\n    }\n  }, [inputText]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const createChannel = async () => {\n    const selectedUsersIds = selectedUsers.map((u) => u.id);\n\n    if (!selectedUsersIds.length) return;\n\n    const conversation = await client.channel('messaging', {\n      members: [...selectedUsersIds, client.userID],\n    });\n\n    await conversation.watch();\n\n    setActiveChannel(conversation);\n    setSelectedUsers([]);\n    setUsers([]);\n    onClose();\n  };\n\n  const addUser = (u) => {\n    const isAlreadyAdded = selectedUsers.find((user) => user.id === u.id);\n    if (isAlreadyAdded) return;\n\n    setSelectedUsers([...selectedUsers, u]);\n    setResultsOpen(false);\n    setInputText('');\n    inputRef.current.focus();\n  };\n\n  const removeUser = (user) => {\n    const newUsers = selectedUsers.filter((item) => item.id !== user.id);\n    setSelectedUsers(newUsers);\n    inputRef.current.focus();\n  };\n\n  const handleKeyDown = useCallback(\n    (e) => {\n      // check for up(38) or down(40) key\n      if (e.which === 38) {\n        setFocusedUser((prevFocused) => {\n          if (prevFocused === undefined) return 0;\n          return prevFocused === 0 ? users.length - 1 : prevFocused - 1;\n        });\n      }\n      if (e.which === 40) {\n        setFocusedUser((prevFocused) => {\n          if (prevFocused === undefined) return 0;\n          return prevFocused === users.length - 1 ? 0 : prevFocused + 1;\n        });\n      }\n      if (e.which === 13) {\n        e.preventDefault();\n        if (focusedUser !== undefined) {\n          addUser(users[focusedUser]);\n          return setFocusedUser(undefined);\n        }\n      }\n    },\n    [users, focusedUser], // eslint-disable-line\n  );\n\n  useEffect(() => {\n    document.addEventListener('keydown', handleKeyDown, false);\n    return () => document.removeEventListener('keydown', handleKeyDown);\n  }, [handleKeyDown]);\n\n  return (\n    <div className='messaging-create-channel'>\n      <header>\n        <div className='messaging-create-channel__left'>\n          <div className='messaging-create-channel__left-text'>To: </div>\n          <div className='users-input-container'>\n            {!!selectedUsers?.length && (\n              <div className='messaging-create-channel__users'>\n                {selectedUsers.map((user) => (\n                  <div className='messaging-create-channel__user' onClick={() => removeUser(user)} key={user.id}>\n                    <div className='messaging-create-channel__user-text'>{user.name}</div>\n                    <XButton />\n                  </div>\n                ))}\n              </div>\n            )}\n            <form onSubmit={addUser}>\n              <input\n                autoFocus\n                ref={inputRef}\n                value={inputText}\n                onChange={(e) => setInputText(e.target.value)}\n                placeholder={!selectedUsers.length ? 'Start typing for suggestions' : ''}\n                type='text'\n                className='messaging-create-channel__input'\n              />\n            </form>\n          </div>\n          <div className='close-mobile-create' onClick={() => toggleMobile()}>\n            <XButtonBackground />\n          </div>\n        </div>\n        <button className='create-channel-button' onClick={createChannel}>\n          Start chat\n        </button>\n      </header>\n      {inputText && (\n        <main>\n          <ul className='messaging-create-channel__user-results'>\n            {!!users?.length && !searchEmpty && (\n              <div>\n                {users.map((user, i) => (\n                  <div\n                    className={`messaging-create-channel__user-result ${focusedUser === i && 'focused'}`}\n                    onClick={() => addUser(user)}\n                    key={user.id}\n                  >\n                    <UserResult user={user} />\n                  </div>\n                ))}\n              </div>\n            )}\n            {searchEmpty && (\n              <div\n                onClick={() => {\n                  inputRef.current.focus();\n                  clearState();\n                }}\n                className='messaging-create-channel__user-result empty'\n              >\n                No people found...\n              </div>\n            )}\n          </ul>\n        </main>\n      )}\n    </div>\n  );\n};\n\nexport default React.memo(CreateChannel);\n"]},"metadata":{},"sourceType":"module"}