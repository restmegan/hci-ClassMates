{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * Partial polyfill for webkit `scrollIntoViewIfNeeded()` method. Addresses\n * vertical scrolling only.\n *\n * Inspired by https://gist.github.com/hsablonniere/2581101, but uses\n * `getBoundingClientRect`.\n */\n\nfunction scrollIntoViewIfNeeded(node) {\n  // Webkit browsers\n  if (Element.prototype.scrollIntoViewIfNeeded) {\n    node.scrollIntoViewIfNeeded();\n    return;\n  } // FF, IE, etc.\n\n\n  var rect = node.getBoundingClientRect();\n  var parent = node.parentNode;\n  var parentRect = parent.getBoundingClientRect();\n  var parentComputedStyle = window.getComputedStyle(parent, null);\n  var parentBorderTopWidth = parseInt(parentComputedStyle.getPropertyValue('border-top-width'));\n\n  if (rect.top < parentRect.top || rect.bottom > parentRect.bottom) {\n    parent.scrollTop = node.offsetTop - parent.offsetTop - parent.clientHeight / 2 - parentBorderTopWidth + node.clientHeight / 2;\n  }\n}\n\nexports.default = scrollIntoViewIfNeeded;","map":{"version":3,"sources":["/Users/akshatdhankher/Desktop/HCI/hci-ClassMates/node_modules/react-bootstrap-typeahead/lib/utils/scrollIntoViewIfNeeded.js"],"names":["Object","defineProperty","exports","value","scrollIntoViewIfNeeded","node","Element","prototype","rect","getBoundingClientRect","parent","parentNode","parentRect","parentComputedStyle","window","getComputedStyle","parentBorderTopWidth","parseInt","getPropertyValue","top","bottom","scrollTop","offsetTop","clientHeight","default"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,sBAAT,CAAgCC,IAAhC,EAAsC;AACpC;AACA,MAAIC,OAAO,CAACC,SAAR,CAAkBH,sBAAtB,EAA8C;AAC5CC,IAAAA,IAAI,CAACD,sBAAL;AACA;AACD,GALmC,CAOpC;;;AACA,MAAII,IAAI,GAAGH,IAAI,CAACI,qBAAL,EAAX;AACA,MAAIC,MAAM,GAAGL,IAAI,CAACM,UAAlB;AACA,MAAIC,UAAU,GAAGF,MAAM,CAACD,qBAAP,EAAjB;AAEA,MAAII,mBAAmB,GAAGC,MAAM,CAACC,gBAAP,CAAwBL,MAAxB,EAAgC,IAAhC,CAA1B;AACA,MAAIM,oBAAoB,GAAGC,QAAQ,CAACJ,mBAAmB,CAACK,gBAApB,CAAqC,kBAArC,CAAD,CAAnC;;AAEA,MAAIV,IAAI,CAACW,GAAL,GAAWP,UAAU,CAACO,GAAtB,IAA6BX,IAAI,CAACY,MAAL,GAAcR,UAAU,CAACQ,MAA1D,EAAkE;AAChEV,IAAAA,MAAM,CAACW,SAAP,GAAmBhB,IAAI,CAACiB,SAAL,GAAiBZ,MAAM,CAACY,SAAxB,GAAoCZ,MAAM,CAACa,YAAP,GAAsB,CAA1D,GAA8DP,oBAA9D,GAAqFX,IAAI,CAACkB,YAAL,GAAoB,CAA5H;AACD;AACF;;AAEDrB,OAAO,CAACsB,OAAR,GAAkBpB,sBAAlB","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * Partial polyfill for webkit `scrollIntoViewIfNeeded()` method. Addresses\n * vertical scrolling only.\n *\n * Inspired by https://gist.github.com/hsablonniere/2581101, but uses\n * `getBoundingClientRect`.\n */\nfunction scrollIntoViewIfNeeded(node) {\n  // Webkit browsers\n  if (Element.prototype.scrollIntoViewIfNeeded) {\n    node.scrollIntoViewIfNeeded();\n    return;\n  }\n\n  // FF, IE, etc.\n  var rect = node.getBoundingClientRect();\n  var parent = node.parentNode;\n  var parentRect = parent.getBoundingClientRect();\n\n  var parentComputedStyle = window.getComputedStyle(parent, null);\n  var parentBorderTopWidth = parseInt(parentComputedStyle.getPropertyValue('border-top-width'));\n\n  if (rect.top < parentRect.top || rect.bottom > parentRect.bottom) {\n    parent.scrollTop = node.offsetTop - parent.offsetTop - parent.clientHeight / 2 - parentBorderTopWidth + node.clientHeight / 2;\n  }\n}\n\nexports.default = scrollIntoViewIfNeeded;"]},"metadata":{},"sourceType":"script"}