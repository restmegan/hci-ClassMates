{"ast":null,"code":"var _jsxFileName = \"/Users/akshatdhankher/Desktop/HCI/hci-ClassMates/src/streamchats-code/src/components/MessagingChannelPreview/DupeMessagingChannelPreview.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport { Avatar, ChatContext } from 'stream-chat-react';\nimport { getCleanImage } from '../../assets';\nimport './MessagingChannelPreview.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar getAvatarGroup = function getAvatarGroup(members) {\n  if (members.length === 1) {\n    return /*#__PURE__*/_jsxDEV(Avatar, {\n      image: getCleanImage(members[0]),\n      size: 50\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 12\n    }, _this);\n  }\n\n  if (members.length === 2) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"channel-preview__avatars two\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: /*#__PURE__*/_jsxDEV(Avatar, {\n          image: getCleanImage(members[0]),\n          shape: \"square\",\n          size: 50\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: /*#__PURE__*/_jsxDEV(Avatar, {\n          image: getCleanImage(members[1]),\n          shape: \"square\",\n          size: 50\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, _this);\n  }\n\n  if (members.length === 3) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"channel-preview__avatars three\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: /*#__PURE__*/_jsxDEV(Avatar, {\n          image: getCleanImage(members[0]),\n          shape: \"square\",\n          size: 50\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [/*#__PURE__*/_jsxDEV(Avatar, {\n          image: getCleanImage(members[1]),\n          shape: \"square\",\n          size: 50\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(Avatar, {\n          image: getCleanImage(members[2]),\n          shape: \"square\",\n          size: 50\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, _this);\n  }\n\n  if (members.length >= 4) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"channel-preview__avatars\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: [/*#__PURE__*/_jsxDEV(Avatar, {\n          image: getCleanImage(members[members.length - 1]),\n          shape: \"square\",\n          size: 40\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(Avatar, {\n          image: getCleanImage(members[members.length - 2]),\n          shape: \"square\",\n          size: 40\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [/*#__PURE__*/_jsxDEV(Avatar, {\n          image: getCleanImage(members[members.length - 3]),\n          shape: \"square\",\n          size: 40\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(Avatar, {\n          image: getCleanImage(members[members.length - 4]),\n          shape: \"square\",\n          size: 40\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, _this);\n  }\n\n  return null;\n};\n\nvar getTimeStamp = function getTimeStamp(channel) {\n  var _channel$state$last_m, _channel$state$last_m2;\n\n  var lastHours = (_channel$state$last_m = channel.state.last_message_at) === null || _channel$state$last_m === void 0 ? void 0 : _channel$state$last_m.getHours();\n  var lastMinutes = (_channel$state$last_m2 = channel.state.last_message_at) === null || _channel$state$last_m2 === void 0 ? void 0 : _channel$state$last_m2.getMinutes();\n  var half = 'AM';\n\n  if (lastHours === undefined || lastMinutes === undefined) {\n    return '';\n  }\n\n  if (lastHours > 12) {\n    lastHours = lastHours - 12;\n    half = 'PM';\n  }\n\n  if (lastHours === 0) lastHours = 12;\n  if (lastHours === 12) half = 'PM';\n\n  if (lastMinutes.toString().length === 1) {\n    lastMinutes = \"0\".concat(lastMinutes);\n  }\n\n  return \"\".concat(lastHours, \":\").concat(lastMinutes, \" \").concat(half);\n};\n\nvar getChannelName = function getChannelName(members) {\n  var _members$2, _members$3;\n\n  var defaultName = 'Johnny Blaze';\n\n  if (!members.length || members.length === 1) {\n    var _members$;\n\n    return ((_members$ = members[0]) === null || _members$ === void 0 ? void 0 : _members$.user.name) || defaultName;\n  }\n\n  return \"\".concat(((_members$2 = members[0]) === null || _members$2 === void 0 ? void 0 : _members$2.user.name) || defaultName, \", \").concat(((_members$3 = members[1]) === null || _members$3 === void 0 ? void 0 : _members$3.user.name) || defaultName);\n};\n\nvar DupeMessagingChannelPreview = function DupeMessagingChannelPreview(props) {\n  _s();\n\n  var channel = props.channel,\n      latestMessage = props.latestMessage,\n      setActiveChannel = props.setActiveChannel,\n      setIsCreating = props.setIsCreating;\n\n  var _useContext = useContext(ChatContext),\n      activeChannel = _useContext.channel,\n      client = _useContext.client;\n\n  var members = Object.values(channel.state.members).filter(function (_ref) {\n    var user = _ref.user;\n    return user.id !== client.userID;\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: (channel === null || channel === void 0 ? void 0 : channel.id) === (activeChannel === null || activeChannel === void 0 ? void 0 : activeChannel.id) ? 'channel-preview__container selected' : 'channel-preview__container',\n    id: \"duplicate\",\n    onClick: function onClick() {\n      setIsCreating(false);\n      setActiveChannel(channel);\n    },\n    children: [getAvatarGroup(members), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"channel-preview__content-wrapper\",\n      id: \"duplicate-content-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"channel-preview__content-top\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"channel-preview__content-name\",\n          children: channel.data.name || getChannelName(members)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"channel-preview__content-time\",\n          children: getTimeStamp(channel)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"channel-preview__content-message\",\n        children: latestMessage || 'Send a message'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(DupeMessagingChannelPreview, \"iItXv/vKJ2h7h3utc2uqCZ7jwQc=\");\n\n_c = DupeMessagingChannelPreview;\nexport default DupeMessagingChannelPreview;\n\nvar _c;\n\n$RefreshReg$(_c, \"DupeMessagingChannelPreview\");","map":{"version":3,"sources":["/Users/akshatdhankher/Desktop/HCI/hci-ClassMates/src/streamchats-code/src/components/MessagingChannelPreview/DupeMessagingChannelPreview.js"],"names":["React","useContext","Avatar","ChatContext","getCleanImage","getAvatarGroup","members","length","getTimeStamp","channel","lastHours","state","last_message_at","getHours","lastMinutes","getMinutes","half","undefined","toString","getChannelName","defaultName","user","name","DupeMessagingChannelPreview","props","latestMessage","setActiveChannel","setIsCreating","activeChannel","client","Object","values","filter","id","userID","data"],"mappings":"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","sourcesContent":["import React, { useContext } from 'react';\nimport { Avatar, ChatContext } from 'stream-chat-react';\nimport { getCleanImage } from '../../assets';\n\nimport './MessagingChannelPreview.css';\n\nconst getAvatarGroup = (members) => {\n  if (members.length === 1) {\n    return <Avatar image={getCleanImage(members[0])} size={50} />;\n  }\n\n  if (members.length === 2) {\n    return (\n      <div className='channel-preview__avatars two'>\n        <span>\n          <Avatar image={getCleanImage(members[0])} shape='square' size={50} />\n        </span>\n        <span>\n          <Avatar image={getCleanImage(members[1])} shape='square' size={50} />\n        </span>\n      </div>\n    );\n  }\n\n  if (members.length === 3) {\n    return (\n      <div className='channel-preview__avatars three'>\n        <span>\n          <Avatar image={getCleanImage(members[0])} shape='square' size={50} />\n        </span>\n        <span>\n          <Avatar image={getCleanImage(members[1])} shape='square' size={50} />\n          <Avatar image={getCleanImage(members[2])} shape='square' size={50} />\n        </span>\n      </div>\n    );\n  }\n\n  if (members.length >= 4) {\n    return (\n      <div className='channel-preview__avatars'>\n        <span>\n          <Avatar image={getCleanImage(members[members.length - 1])} shape='square' size={40} />\n          <Avatar image={getCleanImage(members[members.length - 2])} shape='square' size={40} />\n        </span>\n        <span>\n          <Avatar image={getCleanImage(members[members.length - 3])} shape='square' size={40} />\n          <Avatar image={getCleanImage(members[members.length - 4])} shape='square' size={40} />\n        </span>\n      </div>\n    );\n  }\n\n  return null;\n};\n\nconst getTimeStamp = (channel) => {\n  let lastHours = channel.state.last_message_at?.getHours();\n  let lastMinutes = channel.state.last_message_at?.getMinutes();\n  let half = 'AM';\n\n  if (lastHours === undefined || lastMinutes === undefined) {\n    return '';\n  }\n\n  if (lastHours > 12) {\n    lastHours = lastHours - 12;\n    half = 'PM';\n  }\n\n  if (lastHours === 0) lastHours = 12;\n  if (lastHours === 12) half = 'PM';\n\n  if (lastMinutes.toString().length === 1) {\n    lastMinutes = `0${lastMinutes}`;\n  }\n\n  return `${lastHours}:${lastMinutes} ${half}`;\n};\n\nconst getChannelName = (members) => {\n  const defaultName = 'Johnny Blaze';\n\n  if (!members.length || members.length === 1) {\n    return members[0]?.user.name || defaultName;\n  }\n\n  return `${members[0]?.user.name || defaultName}, ${members[1]?.user.name || defaultName}`;\n};\n\nconst DupeMessagingChannelPreview = (props) => {\n  const { channel, latestMessage, setActiveChannel, setIsCreating } = props;\n\n  const { channel: activeChannel, client } = useContext(ChatContext);\n\n  const members = Object.values(channel.state.members).filter(({ user }) => user.id !== client.userID);\n\n  return (\n    <div\n      className={channel?.id === activeChannel?.id ? 'channel-preview__container selected' : 'channel-preview__container'}\n      id = \"duplicate\"\n      onClick={() => {\n        setIsCreating(false);\n        setActiveChannel(channel);\n      }}\n    >\n      {getAvatarGroup(members)}\n      <div className='channel-preview__content-wrapper' id=\"duplicate-content-wrapper\">\n        <div className='channel-preview__content-top'>\n          <p className='channel-preview__content-name'>{channel.data.name || getChannelName(members)}</p>\n          <p className='channel-preview__content-time'>{getTimeStamp(channel)}</p>\n        </div>\n        <p className='channel-preview__content-message'>{latestMessage || 'Send a message'}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default DupeMessagingChannelPreview;\n"]},"metadata":{},"sourceType":"module"}