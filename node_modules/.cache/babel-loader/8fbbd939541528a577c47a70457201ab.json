{"ast":null,"code":"import _regeneratorRuntime from \"/Users/annaisthebest/Desktop/hci-ClassMates/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/annaisthebest/Desktop/hci-ClassMates/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/Users/annaisthebest/Desktop/hci-ClassMates/src/streamchats-code/src/components/MessagingChannelList/MessagingChannelList.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect } from 'react';\nimport { Avatar, ChatContext } from 'stream-chat-react';\nimport './MessagingChannelList.css';\nimport { SkeletonLoader } from './SkeletonLoader';\nimport { CreateChannelIcon } from '../../assets';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar MessagingChannelList = function MessagingChannelList(_ref) {\n  _s();\n\n  var children = _ref.children,\n      _ref$error = _ref.error,\n      error = _ref$error === void 0 ? false : _ref$error,\n      loading = _ref.loading,\n      onCreateChannel = _ref.onCreateChannel;\n\n  var _useContext = useContext(ChatContext),\n      client = _useContext.client,\n      setActiveChannel = _useContext.setActiveChannel;\n\n  var _ref2 = client.user || {},\n      id = _ref2.id,\n      _ref2$image = _ref2.image,\n      image = _ref2$image === void 0 ? require('../../assets/stream.png') : _ref2$image,\n      _ref2$name = _ref2.name,\n      name = _ref2$name === void 0 ? 'Example User' : _ref2$name;\n\n  useEffect(function () {\n    var _children$props, _children$props$child;\n\n    var getDemoChannel = /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(client) {\n        var channel;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                channel = client.channel('messaging', 'first', {\n                  name: 'Classwide Channel',\n                  image: \"https://i.pinimg.com/originals/9e/ef/54/9eef54b8786e4d43a332e7cd28683d55.png\"\n                });\n                _context.next = 3;\n                return channel.watch();\n\n              case 3:\n                _context.next = 5;\n                return channel.addMembers([client.user.id]);\n\n              case 5:\n                setActiveChannel(channel);\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function getDemoChannel(_x) {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n\n    if (!loading && !(children === null || children === void 0 ? void 0 : (_children$props = children.props) === null || _children$props === void 0 ? void 0 : (_children$props$child = _children$props.children) === null || _children$props$child === void 0 ? void 0 : _children$props$child.length)) {\n      getDemoChannel(client);\n    }\n  }, [loading]); // eslint-disable-line\n\n  var ListHeaderWrapper = function ListHeaderWrapper(_ref4) {\n    var children = _ref4.children;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messaging__channel-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"messaging__channel-list__header\",\n        children: [/*#__PURE__*/_jsxDEV(Avatar, {\n          image: image,\n          name: name,\n          size: 40\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"messaging__channel-list__header__name\",\n          children: name || id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"messaging__channel-list__header__button\",\n          onClick: onCreateChannel,\n          children: /*#__PURE__*/_jsxDEV(CreateChannelIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, _this), children]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, _this);\n  };\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(ListHeaderWrapper, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"messaging__channel-list__message\",\n        children: \"Error loading conversations, please try again momentarily.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, _this);\n  }\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(ListHeaderWrapper, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"messaging__channel-list__message\",\n        children: /*#__PURE__*/_jsxDEV(SkeletonLoader, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, _this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(ListHeaderWrapper, {\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 10\n  }, _this);\n};\n\n_s(MessagingChannelList, \"RRaDRLuIwGKpwSIu4tWle4eXbUI=\");\n\n_c = MessagingChannelList;\nexport default _c2 = /*#__PURE__*/React.memo(MessagingChannelList);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MessagingChannelList\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/annaisthebest/Desktop/hci-ClassMates/src/streamchats-code/src/components/MessagingChannelList/MessagingChannelList.js"],"names":["React","useContext","useEffect","Avatar","ChatContext","SkeletonLoader","CreateChannelIcon","MessagingChannelList","children","error","loading","onCreateChannel","client","setActiveChannel","user","id","image","require","name","getDemoChannel","channel","watch","addMembers","props","length","ListHeaderWrapper","memo"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect } from 'react';\nimport { Avatar, ChatContext } from 'stream-chat-react';\n\nimport './MessagingChannelList.css';\nimport { SkeletonLoader } from './SkeletonLoader';\n\nimport { CreateChannelIcon } from '../../assets';\n\nconst MessagingChannelList = ({ children, error = false, loading, onCreateChannel }) => {\n  const { client, setActiveChannel } = useContext(ChatContext);\n  const { id, image = require('../../assets/stream.png'), name = 'Example User' } = client.user || {};\n\n  useEffect(() => {\n    const getDemoChannel = async (client) => {\n      const channel = client.channel('messaging', 'first', {\n        name: 'Classwide Channel',\n        image: \"https://i.pinimg.com/originals/9e/ef/54/9eef54b8786e4d43a332e7cd28683d55.png\"\n      });\n      await channel.watch();\n      await channel.addMembers([client.user.id]);\n      setActiveChannel(channel);\n    };\n\n    if (!loading && !children?.props?.children?.length) {\n      getDemoChannel(client);\n    }\n  }, [loading]); // eslint-disable-line\n\n  const ListHeaderWrapper = ({ children }) => {\n    return (\n      <div className='messaging__channel-list'>\n        <div className='messaging__channel-list__header'>\n          <Avatar image={image} name={name} size={40} />\n          <div className='messaging__channel-list__header__name'>{name || id}</div>\n          <button className='messaging__channel-list__header__button' onClick={onCreateChannel}>\n            <CreateChannelIcon />\n          </button>\n        </div>\n        {children}\n      </div>\n    );\n  };\n\n  if (error) {\n    return (\n      <ListHeaderWrapper>\n        <div className='messaging__channel-list__message'>Error loading conversations, please try again momentarily.</div>\n      </ListHeaderWrapper>\n    );\n  }\n\n  if (loading) {\n    return (\n      <ListHeaderWrapper>\n        <div className='messaging__channel-list__message'>\n          <SkeletonLoader />\n        </div>\n      </ListHeaderWrapper>\n    );\n  }\n\n  return <ListHeaderWrapper>{children}</ListHeaderWrapper>;\n};\n\nexport default React.memo(MessagingChannelList);\n"]},"metadata":{},"sourceType":"module"}