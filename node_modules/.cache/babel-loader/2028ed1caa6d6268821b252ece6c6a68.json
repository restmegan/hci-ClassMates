{"ast":null,"code":"'use strict';\n\nvar forEach = require('ramda/src/forEach');\n\nvar find = require('ramda/src/find');\n\nvar reject = require('ramda/src/reject');\n\nvar addIndex = require('ramda/src/addIndex');\n\nvar map = require('ramda/src/map');\n\nvar HtmlParser = require('htmlparser2').Parser;\n\nvar DomHandler = require('domhandler').DomHandler;\n\nvar ProcessingInstructions = require('./processing-instructions');\n\nvar IsValidNodeDefinitions = require('./is-valid-node-definitions');\n\nvar utils = require('./utils');\n\nfunction Html2ReactParser(options) {\n  function parseHtmlToTree(html) {\n    options = options || {};\n    options.decodeEntities = true;\n    var handler = new DomHandler();\n    var parser = new HtmlParser(handler, options);\n    parser.parseComplete(html);\n    return handler.dom.filter(function (element) {\n      return element.type !== 'directive';\n    });\n  }\n\n  ;\n\n  function traverseDom(node, isValidNode, processingInstructions, preprocessingInstructions, index) {\n    if (isValidNode(node)) {\n      forEach(function (preprocessingInstruction) {\n        if (preprocessingInstruction.shouldPreprocessNode(node)) {\n          preprocessingInstruction.preprocessNode(node, index);\n        }\n      }, preprocessingInstructions || []);\n      var processingInstruction = find(function (processingInstruction) {\n        return processingInstruction.shouldProcessNode(node);\n      }, processingInstructions || []);\n\n      if (processingInstruction != null) {\n        var children = reject(function (x) {\n          return x == null || x === false;\n        }, addIndex(map)(function (child, i) {\n          return traverseDom(child, isValidNode, processingInstructions, preprocessingInstructions, i);\n        }, node.children || []));\n\n        if (processingInstruction.replaceChildren) {\n          return utils.createElement(node, index, node.data, [processingInstruction.processNode(node, children, index)]);\n        } else {\n          return processingInstruction.processNode(node, children, index);\n        }\n      } else {\n        return false;\n      }\n    } else {\n      return false;\n    }\n  }\n\n  ;\n\n  function parseWithInstructions(html, isValidNode, processingInstructions, preprocessingInstructions) {\n    var domTree = parseHtmlToTree(html);\n    var list = domTree.map(function (domTreeItem, index) {\n      return traverseDom(domTreeItem, isValidNode, processingInstructions, preprocessingInstructions, index);\n    });\n    return list.length <= 1 ? list[0] : list;\n  }\n\n  ;\n\n  function parse(html) {\n    var processingInstructions = new ProcessingInstructions();\n    return parseWithInstructions(html, IsValidNodeDefinitions.alwaysValid, processingInstructions.defaultProcessingInstructions);\n  }\n\n  ;\n  return {\n    parse: parse,\n    parseWithInstructions: parseWithInstructions\n  };\n}\n\n_c = Html2ReactParser;\n;\nmodule.exports = Html2ReactParser;\n\nvar _c;\n\n$RefreshReg$(_c, \"Html2ReactParser\");","map":{"version":3,"sources":["/Users/akshatdhankher/Desktop/HCI/hci-ClassMates/src/ChatPageUI/node_modules/html-to-react/lib/parser.js"],"names":["forEach","require","find","reject","addIndex","map","HtmlParser","Parser","DomHandler","ProcessingInstructions","IsValidNodeDefinitions","utils","Html2ReactParser","options","parseHtmlToTree","html","decodeEntities","handler","parser","parseComplete","dom","filter","element","type","traverseDom","node","isValidNode","processingInstructions","preprocessingInstructions","index","preprocessingInstruction","shouldPreprocessNode","preprocessNode","processingInstruction","shouldProcessNode","children","x","child","i","replaceChildren","createElement","data","processNode","parseWithInstructions","domTree","list","domTreeItem","length","parse","alwaysValid","defaultProcessingInstructions","module","exports"],"mappings":"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","sourcesContent":["'use strict';\nvar forEach = require('ramda/src/forEach');\nvar find = require('ramda/src/find');\nvar reject = require('ramda/src/reject');\nvar addIndex = require('ramda/src/addIndex');\nvar map = require('ramda/src/map');\nvar HtmlParser = require('htmlparser2').Parser;\nvar DomHandler = require('domhandler').DomHandler;\nvar ProcessingInstructions = require('./processing-instructions');\nvar IsValidNodeDefinitions = require('./is-valid-node-definitions');\nvar utils = require('./utils');\n\nfunction Html2ReactParser(options) {\n  function parseHtmlToTree(html) {\n    options = options || {};\n    options.decodeEntities = true;\n    var handler = new DomHandler();\n    var parser = new HtmlParser(handler, options);\n    parser.parseComplete(html);\n    return handler.dom.filter(function (element) {\n      return element.type !== 'directive';\n    });\n  };\n\n  function traverseDom(node, isValidNode, processingInstructions, preprocessingInstructions,\n    index) {\n    if (isValidNode(node)) {\n      forEach(function (preprocessingInstruction) {\n        if (preprocessingInstruction.shouldPreprocessNode(node)) {\n          preprocessingInstruction.preprocessNode(node, index);\n        }\n      }, preprocessingInstructions || []);\n\n      var processingInstruction = find(function (processingInstruction) {\n        return processingInstruction.shouldProcessNode(node);\n      }, processingInstructions || []);\n      if (processingInstruction != null) {\n        var children = reject(function (x) {return x == null || x === false;},\n          addIndex(map)(function (child, i) {\n            return traverseDom(child, isValidNode, processingInstructions,\n              preprocessingInstructions, i);\n          }, node.children || []));\n\n        if (processingInstruction.replaceChildren) {\n          return utils.createElement(node, index, node.data, [\n            processingInstruction.processNode(node, children, index),\n          ]);\n        } else {\n          return processingInstruction.processNode(node, children, index);\n        }\n      } else {\n        return false;\n      }\n    } else {\n      return false;\n    }\n  };\n\n  function parseWithInstructions(html, isValidNode, processingInstructions,\n      preprocessingInstructions) {\n    var domTree = parseHtmlToTree(html);\n    var list = domTree.map(function (domTreeItem, index) {\n      return traverseDom(domTreeItem, isValidNode, processingInstructions,\n        preprocessingInstructions, index);\n    });\n    return list.length <= 1 ? list[0] : list;\n  };\n\n  function parse(html) {\n    var processingInstructions = new ProcessingInstructions();\n    return parseWithInstructions(html,\n      IsValidNodeDefinitions.alwaysValid,\n      processingInstructions.defaultProcessingInstructions);\n  };\n\n  return {\n    parse: parse,\n    parseWithInstructions: parseWithInstructions,\n  };\n};\n\nmodule.exports = Html2ReactParser;\n"]},"metadata":{},"sourceType":"module"}