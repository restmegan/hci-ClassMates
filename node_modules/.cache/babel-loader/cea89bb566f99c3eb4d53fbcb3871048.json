{"ast":null,"code":"/*\n * JavaScript Load Image Exif Map\n * https://github.com/blueimp/JavaScript-Load-Image\n *\n * Copyright 2013, Sebastian Tschan\n * https://blueimp.net\n *\n * Exif tags mapping based on\n * https://github.com/jseidelin/exif-js\n *\n * Licensed under the MIT license:\n * https://opensource.org/licenses/MIT\n */\n\n/* global define, module, require */\n;\n\n(function (factory) {\n  'use strict';\n\n  if (typeof define === 'function' && define.amd) {\n    // Register as an anonymous AMD module:\n    define(['./load-image', './load-image-exif'], factory);\n  } else if (typeof module === 'object' && module.exports) {\n    factory(require('./load-image'), require('./load-image-exif'));\n  } else {\n    // Browser globals:\n    factory(window.loadImage);\n  }\n})(function (loadImage) {\n  'use strict';\n\n  var ExifMapProto = loadImage.ExifMap.prototype;\n  ExifMapProto.tags = {\n    // =================\n    // TIFF tags (IFD0):\n    // =================\n    0x0100: 'ImageWidth',\n    0x0101: 'ImageHeight',\n    0x0102: 'BitsPerSample',\n    0x0103: 'Compression',\n    0x0106: 'PhotometricInterpretation',\n    0x0112: 'Orientation',\n    0x0115: 'SamplesPerPixel',\n    0x011c: 'PlanarConfiguration',\n    0x0212: 'YCbCrSubSampling',\n    0x0213: 'YCbCrPositioning',\n    0x011a: 'XResolution',\n    0x011b: 'YResolution',\n    0x0128: 'ResolutionUnit',\n    0x0111: 'StripOffsets',\n    0x0116: 'RowsPerStrip',\n    0x0117: 'StripByteCounts',\n    0x0201: 'JPEGInterchangeFormat',\n    0x0202: 'JPEGInterchangeFormatLength',\n    0x012d: 'TransferFunction',\n    0x013e: 'WhitePoint',\n    0x013f: 'PrimaryChromaticities',\n    0x0211: 'YCbCrCoefficients',\n    0x0214: 'ReferenceBlackWhite',\n    0x0132: 'DateTime',\n    0x010e: 'ImageDescription',\n    0x010f: 'Make',\n    0x0110: 'Model',\n    0x0131: 'Software',\n    0x013b: 'Artist',\n    0x8298: 'Copyright',\n    0x8769: {\n      // ExifIFDPointer\n      0x9000: 'ExifVersion',\n      // EXIF version\n      0xa000: 'FlashpixVersion',\n      // Flashpix format version\n      0xa001: 'ColorSpace',\n      // Color space information tag\n      0xa002: 'PixelXDimension',\n      // Valid width of meaningful image\n      0xa003: 'PixelYDimension',\n      // Valid height of meaningful image\n      0xa500: 'Gamma',\n      0x9101: 'ComponentsConfiguration',\n      // Information about channels\n      0x9102: 'CompressedBitsPerPixel',\n      // Compressed bits per pixel\n      0x927c: 'MakerNote',\n      // Any desired information written by the manufacturer\n      0x9286: 'UserComment',\n      // Comments by user\n      0xa004: 'RelatedSoundFile',\n      // Name of related sound file\n      0x9003: 'DateTimeOriginal',\n      // Date and time when the original image was generated\n      0x9004: 'DateTimeDigitized',\n      // Date and time when the image was stored digitally\n      0x9010: 'OffsetTime',\n      // Time zone when the image file was last changed\n      0x9011: 'OffsetTimeOriginal',\n      // Time zone when the image was stored digitally\n      0x9012: 'OffsetTimeDigitized',\n      // Time zone when the image was stored digitally\n      0x9290: 'SubSecTime',\n      // Fractions of seconds for DateTime\n      0x9291: 'SubSecTimeOriginal',\n      // Fractions of seconds for DateTimeOriginal\n      0x9292: 'SubSecTimeDigitized',\n      // Fractions of seconds for DateTimeDigitized\n      0x829a: 'ExposureTime',\n      // Exposure time (in seconds)\n      0x829d: 'FNumber',\n      0x8822: 'ExposureProgram',\n      // Exposure program\n      0x8824: 'SpectralSensitivity',\n      // Spectral sensitivity\n      0x8827: 'PhotographicSensitivity',\n      // EXIF 2.3, ISOSpeedRatings in EXIF 2.2\n      0x8828: 'OECF',\n      // Optoelectric conversion factor\n      0x8830: 'SensitivityType',\n      0x8831: 'StandardOutputSensitivity',\n      0x8832: 'RecommendedExposureIndex',\n      0x8833: 'ISOSpeed',\n      0x8834: 'ISOSpeedLatitudeyyy',\n      0x8835: 'ISOSpeedLatitudezzz',\n      0x9201: 'ShutterSpeedValue',\n      // Shutter speed\n      0x9202: 'ApertureValue',\n      // Lens aperture\n      0x9203: 'BrightnessValue',\n      // Value of brightness\n      0x9204: 'ExposureBias',\n      // Exposure bias\n      0x9205: 'MaxApertureValue',\n      // Smallest F number of lens\n      0x9206: 'SubjectDistance',\n      // Distance to subject in meters\n      0x9207: 'MeteringMode',\n      // Metering mode\n      0x9208: 'LightSource',\n      // Kind of light source\n      0x9209: 'Flash',\n      // Flash status\n      0x9214: 'SubjectArea',\n      // Location and area of main subject\n      0x920a: 'FocalLength',\n      // Focal length of the lens in mm\n      0xa20b: 'FlashEnergy',\n      // Strobe energy in BCPS\n      0xa20c: 'SpatialFrequencyResponse',\n      0xa20e: 'FocalPlaneXResolution',\n      // Number of pixels in width direction per FPRUnit\n      0xa20f: 'FocalPlaneYResolution',\n      // Number of pixels in height direction per FPRUnit\n      0xa210: 'FocalPlaneResolutionUnit',\n      // Unit for measuring the focal plane resolution\n      0xa214: 'SubjectLocation',\n      // Location of subject in image\n      0xa215: 'ExposureIndex',\n      // Exposure index selected on camera\n      0xa217: 'SensingMethod',\n      // Image sensor type\n      0xa300: 'FileSource',\n      // Image source (3 == DSC)\n      0xa301: 'SceneType',\n      // Scene type (1 == directly photographed)\n      0xa302: 'CFAPattern',\n      // Color filter array geometric pattern\n      0xa401: 'CustomRendered',\n      // Special processing\n      0xa402: 'ExposureMode',\n      // Exposure mode\n      0xa403: 'WhiteBalance',\n      // 1 = auto white balance, 2 = manual\n      0xa404: 'DigitalZoomRatio',\n      // Digital zoom ratio\n      0xa405: 'FocalLengthIn35mmFilm',\n      0xa406: 'SceneCaptureType',\n      // Type of scene\n      0xa407: 'GainControl',\n      // Degree of overall image gain adjustment\n      0xa408: 'Contrast',\n      // Direction of contrast processing applied by camera\n      0xa409: 'Saturation',\n      // Direction of saturation processing applied by camera\n      0xa40a: 'Sharpness',\n      // Direction of sharpness processing applied by camera\n      0xa40b: 'DeviceSettingDescription',\n      0xa40c: 'SubjectDistanceRange',\n      // Distance to subject\n      0xa420: 'ImageUniqueID',\n      // Identifier assigned uniquely to each image\n      0xa430: 'CameraOwnerName',\n      0xa431: 'BodySerialNumber',\n      0xa432: 'LensSpecification',\n      0xa433: 'LensMake',\n      0xa434: 'LensModel',\n      0xa435: 'LensSerialNumber'\n    },\n    0x8825: {\n      // GPSInfoIFDPointer\n      0x0000: 'GPSVersionID',\n      0x0001: 'GPSLatitudeRef',\n      0x0002: 'GPSLatitude',\n      0x0003: 'GPSLongitudeRef',\n      0x0004: 'GPSLongitude',\n      0x0005: 'GPSAltitudeRef',\n      0x0006: 'GPSAltitude',\n      0x0007: 'GPSTimeStamp',\n      0x0008: 'GPSSatellites',\n      0x0009: 'GPSStatus',\n      0x000a: 'GPSMeasureMode',\n      0x000b: 'GPSDOP',\n      0x000c: 'GPSSpeedRef',\n      0x000d: 'GPSSpeed',\n      0x000e: 'GPSTrackRef',\n      0x000f: 'GPSTrack',\n      0x0010: 'GPSImgDirectionRef',\n      0x0011: 'GPSImgDirection',\n      0x0012: 'GPSMapDatum',\n      0x0013: 'GPSDestLatitudeRef',\n      0x0014: 'GPSDestLatitude',\n      0x0015: 'GPSDestLongitudeRef',\n      0x0016: 'GPSDestLongitude',\n      0x0017: 'GPSDestBearingRef',\n      0x0018: 'GPSDestBearing',\n      0x0019: 'GPSDestDistanceRef',\n      0x001a: 'GPSDestDistance',\n      0x001b: 'GPSProcessingMethod',\n      0x001c: 'GPSAreaInformation',\n      0x001d: 'GPSDateStamp',\n      0x001e: 'GPSDifferential',\n      0x001f: 'GPSHPositioningError'\n    },\n    0xa005: {\n      // InteroperabilityIFDPointer\n      0x0001: 'InteroperabilityIndex'\n    }\n  }; // IFD1 directory can contain any IFD0 tags:\n\n  ExifMapProto.tags.ifd1 = ExifMapProto.tags;\n  ExifMapProto.stringValues = {\n    ExposureProgram: {\n      0: 'Undefined',\n      1: 'Manual',\n      2: 'Normal program',\n      3: 'Aperture priority',\n      4: 'Shutter priority',\n      5: 'Creative program',\n      6: 'Action program',\n      7: 'Portrait mode',\n      8: 'Landscape mode'\n    },\n    MeteringMode: {\n      0: 'Unknown',\n      1: 'Average',\n      2: 'CenterWeightedAverage',\n      3: 'Spot',\n      4: 'MultiSpot',\n      5: 'Pattern',\n      6: 'Partial',\n      255: 'Other'\n    },\n    LightSource: {\n      0: 'Unknown',\n      1: 'Daylight',\n      2: 'Fluorescent',\n      3: 'Tungsten (incandescent light)',\n      4: 'Flash',\n      9: 'Fine weather',\n      10: 'Cloudy weather',\n      11: 'Shade',\n      12: 'Daylight fluorescent (D 5700 - 7100K)',\n      13: 'Day white fluorescent (N 4600 - 5400K)',\n      14: 'Cool white fluorescent (W 3900 - 4500K)',\n      15: 'White fluorescent (WW 3200 - 3700K)',\n      17: 'Standard light A',\n      18: 'Standard light B',\n      19: 'Standard light C',\n      20: 'D55',\n      21: 'D65',\n      22: 'D75',\n      23: 'D50',\n      24: 'ISO studio tungsten',\n      255: 'Other'\n    },\n    Flash: {\n      0x0000: 'Flash did not fire',\n      0x0001: 'Flash fired',\n      0x0005: 'Strobe return light not detected',\n      0x0007: 'Strobe return light detected',\n      0x0009: 'Flash fired, compulsory flash mode',\n      0x000d: 'Flash fired, compulsory flash mode, return light not detected',\n      0x000f: 'Flash fired, compulsory flash mode, return light detected',\n      0x0010: 'Flash did not fire, compulsory flash mode',\n      0x0018: 'Flash did not fire, auto mode',\n      0x0019: 'Flash fired, auto mode',\n      0x001d: 'Flash fired, auto mode, return light not detected',\n      0x001f: 'Flash fired, auto mode, return light detected',\n      0x0020: 'No flash function',\n      0x0041: 'Flash fired, red-eye reduction mode',\n      0x0045: 'Flash fired, red-eye reduction mode, return light not detected',\n      0x0047: 'Flash fired, red-eye reduction mode, return light detected',\n      0x0049: 'Flash fired, compulsory flash mode, red-eye reduction mode',\n      0x004d: 'Flash fired, compulsory flash mode, red-eye reduction mode, return light not detected',\n      0x004f: 'Flash fired, compulsory flash mode, red-eye reduction mode, return light detected',\n      0x0059: 'Flash fired, auto mode, red-eye reduction mode',\n      0x005d: 'Flash fired, auto mode, return light not detected, red-eye reduction mode',\n      0x005f: 'Flash fired, auto mode, return light detected, red-eye reduction mode'\n    },\n    SensingMethod: {\n      1: 'Undefined',\n      2: 'One-chip color area sensor',\n      3: 'Two-chip color area sensor',\n      4: 'Three-chip color area sensor',\n      5: 'Color sequential area sensor',\n      7: 'Trilinear sensor',\n      8: 'Color sequential linear sensor'\n    },\n    SceneCaptureType: {\n      0: 'Standard',\n      1: 'Landscape',\n      2: 'Portrait',\n      3: 'Night scene'\n    },\n    SceneType: {\n      1: 'Directly photographed'\n    },\n    CustomRendered: {\n      0: 'Normal process',\n      1: 'Custom process'\n    },\n    WhiteBalance: {\n      0: 'Auto white balance',\n      1: 'Manual white balance'\n    },\n    GainControl: {\n      0: 'None',\n      1: 'Low gain up',\n      2: 'High gain up',\n      3: 'Low gain down',\n      4: 'High gain down'\n    },\n    Contrast: {\n      0: 'Normal',\n      1: 'Soft',\n      2: 'Hard'\n    },\n    Saturation: {\n      0: 'Normal',\n      1: 'Low saturation',\n      2: 'High saturation'\n    },\n    Sharpness: {\n      0: 'Normal',\n      1: 'Soft',\n      2: 'Hard'\n    },\n    SubjectDistanceRange: {\n      0: 'Unknown',\n      1: 'Macro',\n      2: 'Close view',\n      3: 'Distant view'\n    },\n    FileSource: {\n      3: 'DSC'\n    },\n    ComponentsConfiguration: {\n      0: '',\n      1: 'Y',\n      2: 'Cb',\n      3: 'Cr',\n      4: 'R',\n      5: 'G',\n      6: 'B'\n    },\n    Orientation: {\n      1: 'Original',\n      2: 'Horizontal flip',\n      3: 'Rotate 180° CCW',\n      4: 'Vertical flip',\n      5: 'Vertical flip + Rotate 90° CW',\n      6: 'Rotate 90° CW',\n      7: 'Horizontal flip + Rotate 90° CW',\n      8: 'Rotate 90° CCW'\n    }\n  };\n\n  ExifMapProto.getText = function (name) {\n    var value = this.get(name);\n\n    switch (name) {\n      case 'LightSource':\n      case 'Flash':\n      case 'MeteringMode':\n      case 'ExposureProgram':\n      case 'SensingMethod':\n      case 'SceneCaptureType':\n      case 'SceneType':\n      case 'CustomRendered':\n      case 'WhiteBalance':\n      case 'GainControl':\n      case 'Contrast':\n      case 'Saturation':\n      case 'Sharpness':\n      case 'SubjectDistanceRange':\n      case 'FileSource':\n      case 'Orientation':\n        return this.stringValues[name][value];\n\n      case 'ExifVersion':\n      case 'FlashpixVersion':\n        if (!value) return;\n        return String.fromCharCode(value[0], value[1], value[2], value[3]);\n\n      case 'ComponentsConfiguration':\n        if (!value) return;\n        return this.stringValues[name][value[0]] + this.stringValues[name][value[1]] + this.stringValues[name][value[2]] + this.stringValues[name][value[3]];\n\n      case 'GPSVersionID':\n        if (!value) return;\n        return value[0] + '.' + value[1] + '.' + value[2] + '.' + value[3];\n    }\n\n    return String(value);\n  };\n\n  ExifMapProto.getAll = function () {\n    var map = {};\n    var prop;\n    var obj;\n    var name;\n\n    for (prop in this) {\n      if (Object.prototype.hasOwnProperty.call(this, prop)) {\n        obj = this[prop];\n\n        if (obj && obj.getAll) {\n          map[this.ifds[prop].name] = obj.getAll();\n        } else {\n          name = this.tags[prop];\n          if (name) map[name] = this.getText(name);\n        }\n      }\n    }\n\n    return map;\n  };\n\n  ExifMapProto.getName = function (tagCode) {\n    var name = this.tags[tagCode];\n    if (typeof name === 'object') return this.ifds[tagCode].name;\n    return name;\n  } // Extend the map of tag names to tag codes:\n  ;\n\n  (function () {\n    var tags = ExifMapProto.tags;\n    var prop;\n    var ifd;\n    var subTags; // Map the tag names to tags:\n\n    for (prop in tags) {\n      if (Object.prototype.hasOwnProperty.call(tags, prop)) {\n        ifd = ExifMapProto.ifds[prop];\n\n        if (ifd) {\n          subTags = tags[prop];\n\n          for (prop in subTags) {\n            if (Object.prototype.hasOwnProperty.call(subTags, prop)) {\n              ifd.map[subTags[prop]] = Number(prop);\n            }\n          }\n        } else {\n          ExifMapProto.map[tags[prop]] = Number(prop);\n        }\n      }\n    }\n  })();\n});","map":{"version":3,"sources":["/Users/akshatdhankher/Desktop/HCI/hci-ClassMates/node_modules/blueimp-load-image/js/load-image-exif-map.js"],"names":["factory","define","amd","module","exports","require","window","loadImage","ExifMapProto","ExifMap","prototype","tags","ifd1","stringValues","ExposureProgram","MeteringMode","LightSource","Flash","SensingMethod","SceneCaptureType","SceneType","CustomRendered","WhiteBalance","GainControl","Contrast","Saturation","Sharpness","SubjectDistanceRange","FileSource","ComponentsConfiguration","Orientation","getText","name","value","get","String","fromCharCode","getAll","map","prop","obj","Object","hasOwnProperty","call","ifds","getName","tagCode","ifd","subTags","Number"],"mappings":"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","sourcesContent":["/*\n * JavaScript Load Image Exif Map\n * https://github.com/blueimp/JavaScript-Load-Image\n *\n * Copyright 2013, Sebastian Tschan\n * https://blueimp.net\n *\n * Exif tags mapping based on\n * https://github.com/jseidelin/exif-js\n *\n * Licensed under the MIT license:\n * https://opensource.org/licenses/MIT\n */\n\n/* global define, module, require */\n\n;(function (factory) {\n  'use strict'\n  if (typeof define === 'function' && define.amd) {\n    // Register as an anonymous AMD module:\n    define(['./load-image', './load-image-exif'], factory)\n  } else if (typeof module === 'object' && module.exports) {\n    factory(require('./load-image'), require('./load-image-exif'))\n  } else {\n    // Browser globals:\n    factory(window.loadImage)\n  }\n})(function (loadImage) {\n  'use strict'\n\n  var ExifMapProto = loadImage.ExifMap.prototype\n\n  ExifMapProto.tags = {\n    // =================\n    // TIFF tags (IFD0):\n    // =================\n    0x0100: 'ImageWidth',\n    0x0101: 'ImageHeight',\n    0x0102: 'BitsPerSample',\n    0x0103: 'Compression',\n    0x0106: 'PhotometricInterpretation',\n    0x0112: 'Orientation',\n    0x0115: 'SamplesPerPixel',\n    0x011c: 'PlanarConfiguration',\n    0x0212: 'YCbCrSubSampling',\n    0x0213: 'YCbCrPositioning',\n    0x011a: 'XResolution',\n    0x011b: 'YResolution',\n    0x0128: 'ResolutionUnit',\n    0x0111: 'StripOffsets',\n    0x0116: 'RowsPerStrip',\n    0x0117: 'StripByteCounts',\n    0x0201: 'JPEGInterchangeFormat',\n    0x0202: 'JPEGInterchangeFormatLength',\n    0x012d: 'TransferFunction',\n    0x013e: 'WhitePoint',\n    0x013f: 'PrimaryChromaticities',\n    0x0211: 'YCbCrCoefficients',\n    0x0214: 'ReferenceBlackWhite',\n    0x0132: 'DateTime',\n    0x010e: 'ImageDescription',\n    0x010f: 'Make',\n    0x0110: 'Model',\n    0x0131: 'Software',\n    0x013b: 'Artist',\n    0x8298: 'Copyright',\n    0x8769: {\n      // ExifIFDPointer\n      0x9000: 'ExifVersion', // EXIF version\n      0xa000: 'FlashpixVersion', // Flashpix format version\n      0xa001: 'ColorSpace', // Color space information tag\n      0xa002: 'PixelXDimension', // Valid width of meaningful image\n      0xa003: 'PixelYDimension', // Valid height of meaningful image\n      0xa500: 'Gamma',\n      0x9101: 'ComponentsConfiguration', // Information about channels\n      0x9102: 'CompressedBitsPerPixel', // Compressed bits per pixel\n      0x927c: 'MakerNote', // Any desired information written by the manufacturer\n      0x9286: 'UserComment', // Comments by user\n      0xa004: 'RelatedSoundFile', // Name of related sound file\n      0x9003: 'DateTimeOriginal', // Date and time when the original image was generated\n      0x9004: 'DateTimeDigitized', // Date and time when the image was stored digitally\n      0x9010: 'OffsetTime', // Time zone when the image file was last changed\n      0x9011: 'OffsetTimeOriginal', // Time zone when the image was stored digitally\n      0x9012: 'OffsetTimeDigitized', // Time zone when the image was stored digitally\n      0x9290: 'SubSecTime', // Fractions of seconds for DateTime\n      0x9291: 'SubSecTimeOriginal', // Fractions of seconds for DateTimeOriginal\n      0x9292: 'SubSecTimeDigitized', // Fractions of seconds for DateTimeDigitized\n      0x829a: 'ExposureTime', // Exposure time (in seconds)\n      0x829d: 'FNumber',\n      0x8822: 'ExposureProgram', // Exposure program\n      0x8824: 'SpectralSensitivity', // Spectral sensitivity\n      0x8827: 'PhotographicSensitivity', // EXIF 2.3, ISOSpeedRatings in EXIF 2.2\n      0x8828: 'OECF', // Optoelectric conversion factor\n      0x8830: 'SensitivityType',\n      0x8831: 'StandardOutputSensitivity',\n      0x8832: 'RecommendedExposureIndex',\n      0x8833: 'ISOSpeed',\n      0x8834: 'ISOSpeedLatitudeyyy',\n      0x8835: 'ISOSpeedLatitudezzz',\n      0x9201: 'ShutterSpeedValue', // Shutter speed\n      0x9202: 'ApertureValue', // Lens aperture\n      0x9203: 'BrightnessValue', // Value of brightness\n      0x9204: 'ExposureBias', // Exposure bias\n      0x9205: 'MaxApertureValue', // Smallest F number of lens\n      0x9206: 'SubjectDistance', // Distance to subject in meters\n      0x9207: 'MeteringMode', // Metering mode\n      0x9208: 'LightSource', // Kind of light source\n      0x9209: 'Flash', // Flash status\n      0x9214: 'SubjectArea', // Location and area of main subject\n      0x920a: 'FocalLength', // Focal length of the lens in mm\n      0xa20b: 'FlashEnergy', // Strobe energy in BCPS\n      0xa20c: 'SpatialFrequencyResponse',\n      0xa20e: 'FocalPlaneXResolution', // Number of pixels in width direction per FPRUnit\n      0xa20f: 'FocalPlaneYResolution', // Number of pixels in height direction per FPRUnit\n      0xa210: 'FocalPlaneResolutionUnit', // Unit for measuring the focal plane resolution\n      0xa214: 'SubjectLocation', // Location of subject in image\n      0xa215: 'ExposureIndex', // Exposure index selected on camera\n      0xa217: 'SensingMethod', // Image sensor type\n      0xa300: 'FileSource', // Image source (3 == DSC)\n      0xa301: 'SceneType', // Scene type (1 == directly photographed)\n      0xa302: 'CFAPattern', // Color filter array geometric pattern\n      0xa401: 'CustomRendered', // Special processing\n      0xa402: 'ExposureMode', // Exposure mode\n      0xa403: 'WhiteBalance', // 1 = auto white balance, 2 = manual\n      0xa404: 'DigitalZoomRatio', // Digital zoom ratio\n      0xa405: 'FocalLengthIn35mmFilm',\n      0xa406: 'SceneCaptureType', // Type of scene\n      0xa407: 'GainControl', // Degree of overall image gain adjustment\n      0xa408: 'Contrast', // Direction of contrast processing applied by camera\n      0xa409: 'Saturation', // Direction of saturation processing applied by camera\n      0xa40a: 'Sharpness', // Direction of sharpness processing applied by camera\n      0xa40b: 'DeviceSettingDescription',\n      0xa40c: 'SubjectDistanceRange', // Distance to subject\n      0xa420: 'ImageUniqueID', // Identifier assigned uniquely to each image\n      0xa430: 'CameraOwnerName',\n      0xa431: 'BodySerialNumber',\n      0xa432: 'LensSpecification',\n      0xa433: 'LensMake',\n      0xa434: 'LensModel',\n      0xa435: 'LensSerialNumber'\n    },\n    0x8825: {\n      // GPSInfoIFDPointer\n      0x0000: 'GPSVersionID',\n      0x0001: 'GPSLatitudeRef',\n      0x0002: 'GPSLatitude',\n      0x0003: 'GPSLongitudeRef',\n      0x0004: 'GPSLongitude',\n      0x0005: 'GPSAltitudeRef',\n      0x0006: 'GPSAltitude',\n      0x0007: 'GPSTimeStamp',\n      0x0008: 'GPSSatellites',\n      0x0009: 'GPSStatus',\n      0x000a: 'GPSMeasureMode',\n      0x000b: 'GPSDOP',\n      0x000c: 'GPSSpeedRef',\n      0x000d: 'GPSSpeed',\n      0x000e: 'GPSTrackRef',\n      0x000f: 'GPSTrack',\n      0x0010: 'GPSImgDirectionRef',\n      0x0011: 'GPSImgDirection',\n      0x0012: 'GPSMapDatum',\n      0x0013: 'GPSDestLatitudeRef',\n      0x0014: 'GPSDestLatitude',\n      0x0015: 'GPSDestLongitudeRef',\n      0x0016: 'GPSDestLongitude',\n      0x0017: 'GPSDestBearingRef',\n      0x0018: 'GPSDestBearing',\n      0x0019: 'GPSDestDistanceRef',\n      0x001a: 'GPSDestDistance',\n      0x001b: 'GPSProcessingMethod',\n      0x001c: 'GPSAreaInformation',\n      0x001d: 'GPSDateStamp',\n      0x001e: 'GPSDifferential',\n      0x001f: 'GPSHPositioningError'\n    },\n    0xa005: {\n      // InteroperabilityIFDPointer\n      0x0001: 'InteroperabilityIndex'\n    }\n  }\n\n  // IFD1 directory can contain any IFD0 tags:\n  ExifMapProto.tags.ifd1 = ExifMapProto.tags\n\n  ExifMapProto.stringValues = {\n    ExposureProgram: {\n      0: 'Undefined',\n      1: 'Manual',\n      2: 'Normal program',\n      3: 'Aperture priority',\n      4: 'Shutter priority',\n      5: 'Creative program',\n      6: 'Action program',\n      7: 'Portrait mode',\n      8: 'Landscape mode'\n    },\n    MeteringMode: {\n      0: 'Unknown',\n      1: 'Average',\n      2: 'CenterWeightedAverage',\n      3: 'Spot',\n      4: 'MultiSpot',\n      5: 'Pattern',\n      6: 'Partial',\n      255: 'Other'\n    },\n    LightSource: {\n      0: 'Unknown',\n      1: 'Daylight',\n      2: 'Fluorescent',\n      3: 'Tungsten (incandescent light)',\n      4: 'Flash',\n      9: 'Fine weather',\n      10: 'Cloudy weather',\n      11: 'Shade',\n      12: 'Daylight fluorescent (D 5700 - 7100K)',\n      13: 'Day white fluorescent (N 4600 - 5400K)',\n      14: 'Cool white fluorescent (W 3900 - 4500K)',\n      15: 'White fluorescent (WW 3200 - 3700K)',\n      17: 'Standard light A',\n      18: 'Standard light B',\n      19: 'Standard light C',\n      20: 'D55',\n      21: 'D65',\n      22: 'D75',\n      23: 'D50',\n      24: 'ISO studio tungsten',\n      255: 'Other'\n    },\n    Flash: {\n      0x0000: 'Flash did not fire',\n      0x0001: 'Flash fired',\n      0x0005: 'Strobe return light not detected',\n      0x0007: 'Strobe return light detected',\n      0x0009: 'Flash fired, compulsory flash mode',\n      0x000d: 'Flash fired, compulsory flash mode, return light not detected',\n      0x000f: 'Flash fired, compulsory flash mode, return light detected',\n      0x0010: 'Flash did not fire, compulsory flash mode',\n      0x0018: 'Flash did not fire, auto mode',\n      0x0019: 'Flash fired, auto mode',\n      0x001d: 'Flash fired, auto mode, return light not detected',\n      0x001f: 'Flash fired, auto mode, return light detected',\n      0x0020: 'No flash function',\n      0x0041: 'Flash fired, red-eye reduction mode',\n      0x0045: 'Flash fired, red-eye reduction mode, return light not detected',\n      0x0047: 'Flash fired, red-eye reduction mode, return light detected',\n      0x0049: 'Flash fired, compulsory flash mode, red-eye reduction mode',\n      0x004d: 'Flash fired, compulsory flash mode, red-eye reduction mode, return light not detected',\n      0x004f: 'Flash fired, compulsory flash mode, red-eye reduction mode, return light detected',\n      0x0059: 'Flash fired, auto mode, red-eye reduction mode',\n      0x005d: 'Flash fired, auto mode, return light not detected, red-eye reduction mode',\n      0x005f: 'Flash fired, auto mode, return light detected, red-eye reduction mode'\n    },\n    SensingMethod: {\n      1: 'Undefined',\n      2: 'One-chip color area sensor',\n      3: 'Two-chip color area sensor',\n      4: 'Three-chip color area sensor',\n      5: 'Color sequential area sensor',\n      7: 'Trilinear sensor',\n      8: 'Color sequential linear sensor'\n    },\n    SceneCaptureType: {\n      0: 'Standard',\n      1: 'Landscape',\n      2: 'Portrait',\n      3: 'Night scene'\n    },\n    SceneType: {\n      1: 'Directly photographed'\n    },\n    CustomRendered: {\n      0: 'Normal process',\n      1: 'Custom process'\n    },\n    WhiteBalance: {\n      0: 'Auto white balance',\n      1: 'Manual white balance'\n    },\n    GainControl: {\n      0: 'None',\n      1: 'Low gain up',\n      2: 'High gain up',\n      3: 'Low gain down',\n      4: 'High gain down'\n    },\n    Contrast: {\n      0: 'Normal',\n      1: 'Soft',\n      2: 'Hard'\n    },\n    Saturation: {\n      0: 'Normal',\n      1: 'Low saturation',\n      2: 'High saturation'\n    },\n    Sharpness: {\n      0: 'Normal',\n      1: 'Soft',\n      2: 'Hard'\n    },\n    SubjectDistanceRange: {\n      0: 'Unknown',\n      1: 'Macro',\n      2: 'Close view',\n      3: 'Distant view'\n    },\n    FileSource: {\n      3: 'DSC'\n    },\n    ComponentsConfiguration: {\n      0: '',\n      1: 'Y',\n      2: 'Cb',\n      3: 'Cr',\n      4: 'R',\n      5: 'G',\n      6: 'B'\n    },\n    Orientation: {\n      1: 'Original',\n      2: 'Horizontal flip',\n      3: 'Rotate 180° CCW',\n      4: 'Vertical flip',\n      5: 'Vertical flip + Rotate 90° CW',\n      6: 'Rotate 90° CW',\n      7: 'Horizontal flip + Rotate 90° CW',\n      8: 'Rotate 90° CCW'\n    }\n  }\n\n  ExifMapProto.getText = function (name) {\n    var value = this.get(name)\n    switch (name) {\n      case 'LightSource':\n      case 'Flash':\n      case 'MeteringMode':\n      case 'ExposureProgram':\n      case 'SensingMethod':\n      case 'SceneCaptureType':\n      case 'SceneType':\n      case 'CustomRendered':\n      case 'WhiteBalance':\n      case 'GainControl':\n      case 'Contrast':\n      case 'Saturation':\n      case 'Sharpness':\n      case 'SubjectDistanceRange':\n      case 'FileSource':\n      case 'Orientation':\n        return this.stringValues[name][value]\n      case 'ExifVersion':\n      case 'FlashpixVersion':\n        if (!value) return\n        return String.fromCharCode(value[0], value[1], value[2], value[3])\n      case 'ComponentsConfiguration':\n        if (!value) return\n        return (\n          this.stringValues[name][value[0]] +\n          this.stringValues[name][value[1]] +\n          this.stringValues[name][value[2]] +\n          this.stringValues[name][value[3]]\n        )\n      case 'GPSVersionID':\n        if (!value) return\n        return value[0] + '.' + value[1] + '.' + value[2] + '.' + value[3]\n    }\n    return String(value)\n  }\n\n  ExifMapProto.getAll = function () {\n    var map = {}\n    var prop\n    var obj\n    var name\n    for (prop in this) {\n      if (Object.prototype.hasOwnProperty.call(this, prop)) {\n        obj = this[prop]\n        if (obj && obj.getAll) {\n          map[this.ifds[prop].name] = obj.getAll()\n        } else {\n          name = this.tags[prop]\n          if (name) map[name] = this.getText(name)\n        }\n      }\n    }\n    return map\n  }\n\n  ExifMapProto.getName = function (tagCode) {\n    var name = this.tags[tagCode]\n    if (typeof name === 'object') return this.ifds[tagCode].name\n    return name\n  }\n\n  // Extend the map of tag names to tag codes:\n  ;(function () {\n    var tags = ExifMapProto.tags\n    var prop\n    var ifd\n    var subTags\n    // Map the tag names to tags:\n    for (prop in tags) {\n      if (Object.prototype.hasOwnProperty.call(tags, prop)) {\n        ifd = ExifMapProto.ifds[prop]\n        if (ifd) {\n          subTags = tags[prop]\n          for (prop in subTags) {\n            if (Object.prototype.hasOwnProperty.call(subTags, prop)) {\n              ifd.map[subTags[prop]] = Number(prop)\n            }\n          }\n        } else {\n          ExifMapProto.map[tags[prop]] = Number(prop)\n        }\n      }\n    }\n  })()\n})\n"]},"metadata":{},"sourceType":"script"}