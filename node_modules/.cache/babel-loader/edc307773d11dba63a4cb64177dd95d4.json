{"ast":null,"code":"/*\n * JavaScript Load Image\n * https://github.com/blueimp/JavaScript-Load-Image\n *\n * Copyright 2011, Sebastian Tschan\n * https://blueimp.net\n *\n * Licensed under the MIT license:\n * https://opensource.org/licenses/MIT\n */\n\n/* global define, module, Promise */\n;\n\n(function ($) {\n  'use strict';\n\n  var urlAPI = $.URL || $.webkitURL;\n  /**\n   * Creates an object URL for a given File object.\n   *\n   * @param {Blob} blob Blob object\n   * @returns {string|boolean} Returns object URL if API exists, else false.\n   */\n\n  function createObjectURL(blob) {\n    return urlAPI ? urlAPI.createObjectURL(blob) : false;\n  }\n  /**\n   * Revokes a given object URL.\n   *\n   * @param {string} url Blob object URL\n   * @returns {undefined|boolean} Returns undefined if API exists, else false.\n   */\n\n\n  function revokeObjectURL(url) {\n    return urlAPI ? urlAPI.revokeObjectURL(url) : false;\n  }\n  /**\n   * Helper function to revoke an object URL\n   *\n   * @param {string} url Blob Object URL\n   * @param {object} [options] Options object\n   */\n\n\n  function revokeHelper(url, options) {\n    if (url && url.slice(0, 5) === 'blob:' && !(options && options.noRevoke)) {\n      revokeObjectURL(url);\n    }\n  }\n  /**\n   * Loads a given File object via FileReader interface.\n   *\n   * @param {Blob} file Blob object\n   * @param {Function} onload Load event callback\n   * @param {Function} [onerror] Error/Abort event callback\n   * @param {string} [method=readAsDataURL] FileReader method\n   * @returns {FileReader|boolean} Returns FileReader if API exists, else false.\n   */\n\n\n  function readFile(file, onload, onerror, method) {\n    if (!$.FileReader) return false;\n    var reader = new FileReader();\n\n    reader.onload = function () {\n      onload.call(reader, this.result);\n    };\n\n    if (onerror) {\n      reader.onabort = reader.onerror = function () {\n        onerror.call(reader, this.error);\n      };\n    }\n\n    var readerMethod = reader[method || 'readAsDataURL'];\n\n    if (readerMethod) {\n      readerMethod.call(reader, file);\n      return reader;\n    }\n  }\n  /**\n   * Cross-frame instanceof check.\n   *\n   * @param {string} type Instance type\n   * @param {object} obj Object instance\n   * @returns {boolean} Returns true if the object is of the given instance.\n   */\n\n\n  function isInstanceOf(type, obj) {\n    // Cross-frame instanceof check\n    return Object.prototype.toString.call(obj) === '[object ' + type + ']';\n  }\n  /**\n   * @typedef { HTMLImageElement|HTMLCanvasElement } Result\n   */\n\n  /**\n   * Loads an image for a given File object.\n   *\n   * @param {Blob|string} file Blob object or image URL\n   * @param {Function|object} [callback] Image load event callback or options\n   * @param {object} [options] Options object\n   * @returns {HTMLImageElement|FileReader|Promise<Result>} Object\n   */\n\n\n  function loadImage(file, callback, options) {\n    /**\n     * Promise executor\n     *\n     * @param {Function} resolve Resolution function\n     * @param {Function} reject Rejection function\n     * @returns {HTMLImageElement|FileReader} Object\n     */\n    function executor(resolve, reject) {\n      var img = document.createElement('img');\n      var url;\n      /**\n       * Callback for the fetchBlob call.\n       *\n       * @param {HTMLImageElement|HTMLCanvasElement} img Error object\n       * @param {object} data Data object\n       * @returns {undefined} Undefined\n       */\n\n      function resolveWrapper(img, data) {\n        if (resolve === reject) {\n          // Not using Promises\n          if (resolve) resolve(img, data);\n          return;\n        } else if (img instanceof Error) {\n          reject(img);\n          return;\n        }\n\n        data = data || {}; // eslint-disable-line no-param-reassign\n\n        data.image = img;\n        resolve(data);\n      }\n      /**\n       * Callback for the fetchBlob call.\n       *\n       * @param {Blob} blob Blob object\n       * @param {Error} err Error object\n       */\n\n\n      function fetchBlobCallback(blob, err) {\n        if (err && $.console) console.log(err); // eslint-disable-line no-console\n\n        if (blob && isInstanceOf('Blob', blob)) {\n          file = blob; // eslint-disable-line no-param-reassign\n\n          url = createObjectURL(file);\n        } else {\n          url = file;\n\n          if (options && options.crossOrigin) {\n            img.crossOrigin = options.crossOrigin;\n          }\n        }\n\n        img.src = url;\n      }\n\n      img.onerror = function (event) {\n        revokeHelper(url, options);\n        if (reject) reject.call(img, event);\n      };\n\n      img.onload = function () {\n        revokeHelper(url, options);\n        var data = {\n          originalWidth: img.naturalWidth || img.width,\n          originalHeight: img.naturalHeight || img.height\n        };\n\n        try {\n          loadImage.transform(img, options, resolveWrapper, file, data);\n        } catch (error) {\n          if (reject) reject(error);\n        }\n      };\n\n      if (typeof file === 'string') {\n        if (loadImage.requiresMetaData(options)) {\n          loadImage.fetchBlob(file, fetchBlobCallback, options);\n        } else {\n          fetchBlobCallback();\n        }\n\n        return img;\n      } else if (isInstanceOf('Blob', file) || isInstanceOf('File', file)) {\n        url = createObjectURL(file);\n\n        if (url) {\n          img.src = url;\n          return img;\n        }\n\n        return readFile(file, function (url) {\n          img.src = url;\n        }, reject);\n      }\n    }\n\n    if ($.Promise && typeof callback !== 'function') {\n      options = callback; // eslint-disable-line no-param-reassign\n\n      return new Promise(executor);\n    }\n\n    return executor(callback, callback);\n  } // Determines if metadata should be loaded automatically.\n  // Requires the load image meta extension to load metadata.\n\n\n  loadImage.requiresMetaData = function (options) {\n    return options && options.meta;\n  }; // If the callback given to this function returns a blob, it is used as image\n  // source instead of the original url and overrides the file argument used in\n  // the onload and onerror event callbacks:\n\n\n  loadImage.fetchBlob = function (url, callback) {\n    callback();\n  };\n\n  loadImage.transform = function (img, options, callback, file, data) {\n    callback(img, data);\n  };\n\n  loadImage.global = $;\n  loadImage.readFile = readFile;\n  loadImage.isInstanceOf = isInstanceOf;\n  loadImage.createObjectURL = createObjectURL;\n  loadImage.revokeObjectURL = revokeObjectURL;\n\n  if (typeof define === 'function' && define.amd) {\n    define(function () {\n      return loadImage;\n    });\n  } else if (typeof module === 'object' && module.exports) {\n    module.exports = loadImage;\n  } else {\n    $.loadImage = loadImage;\n  }\n})(typeof window !== 'undefined' && window || this);","map":{"version":3,"sources":["/Users/akshatdhankher/Desktop/HCI/hci-ClassMates/src/ChatPageUI/node_modules/blueimp-load-image/js/load-image.js"],"names":["$","urlAPI","URL","webkitURL","createObjectURL","blob","revokeObjectURL","url","revokeHelper","options","slice","noRevoke","readFile","file","onload","onerror","method","FileReader","reader","call","result","onabort","error","readerMethod","isInstanceOf","type","obj","Object","prototype","toString","loadImage","callback","executor","resolve","reject","img","document","createElement","resolveWrapper","data","Error","image","fetchBlobCallback","err","console","log","crossOrigin","src","event","originalWidth","naturalWidth","width","originalHeight","naturalHeight","height","transform","requiresMetaData","fetchBlob","Promise","meta","global","define","amd","module","exports","window"],"mappings":"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","sourcesContent":["/*\n * JavaScript Load Image\n * https://github.com/blueimp/JavaScript-Load-Image\n *\n * Copyright 2011, Sebastian Tschan\n * https://blueimp.net\n *\n * Licensed under the MIT license:\n * https://opensource.org/licenses/MIT\n */\n\n/* global define, module, Promise */\n\n;(function ($) {\n  'use strict'\n\n  var urlAPI = $.URL || $.webkitURL\n\n  /**\n   * Creates an object URL for a given File object.\n   *\n   * @param {Blob} blob Blob object\n   * @returns {string|boolean} Returns object URL if API exists, else false.\n   */\n  function createObjectURL(blob) {\n    return urlAPI ? urlAPI.createObjectURL(blob) : false\n  }\n\n  /**\n   * Revokes a given object URL.\n   *\n   * @param {string} url Blob object URL\n   * @returns {undefined|boolean} Returns undefined if API exists, else false.\n   */\n  function revokeObjectURL(url) {\n    return urlAPI ? urlAPI.revokeObjectURL(url) : false\n  }\n\n  /**\n   * Helper function to revoke an object URL\n   *\n   * @param {string} url Blob Object URL\n   * @param {object} [options] Options object\n   */\n  function revokeHelper(url, options) {\n    if (url && url.slice(0, 5) === 'blob:' && !(options && options.noRevoke)) {\n      revokeObjectURL(url)\n    }\n  }\n\n  /**\n   * Loads a given File object via FileReader interface.\n   *\n   * @param {Blob} file Blob object\n   * @param {Function} onload Load event callback\n   * @param {Function} [onerror] Error/Abort event callback\n   * @param {string} [method=readAsDataURL] FileReader method\n   * @returns {FileReader|boolean} Returns FileReader if API exists, else false.\n   */\n  function readFile(file, onload, onerror, method) {\n    if (!$.FileReader) return false\n    var reader = new FileReader()\n    reader.onload = function () {\n      onload.call(reader, this.result)\n    }\n    if (onerror) {\n      reader.onabort = reader.onerror = function () {\n        onerror.call(reader, this.error)\n      }\n    }\n    var readerMethod = reader[method || 'readAsDataURL']\n    if (readerMethod) {\n      readerMethod.call(reader, file)\n      return reader\n    }\n  }\n\n  /**\n   * Cross-frame instanceof check.\n   *\n   * @param {string} type Instance type\n   * @param {object} obj Object instance\n   * @returns {boolean} Returns true if the object is of the given instance.\n   */\n  function isInstanceOf(type, obj) {\n    // Cross-frame instanceof check\n    return Object.prototype.toString.call(obj) === '[object ' + type + ']'\n  }\n\n  /**\n   * @typedef { HTMLImageElement|HTMLCanvasElement } Result\n   */\n\n  /**\n   * Loads an image for a given File object.\n   *\n   * @param {Blob|string} file Blob object or image URL\n   * @param {Function|object} [callback] Image load event callback or options\n   * @param {object} [options] Options object\n   * @returns {HTMLImageElement|FileReader|Promise<Result>} Object\n   */\n  function loadImage(file, callback, options) {\n    /**\n     * Promise executor\n     *\n     * @param {Function} resolve Resolution function\n     * @param {Function} reject Rejection function\n     * @returns {HTMLImageElement|FileReader} Object\n     */\n    function executor(resolve, reject) {\n      var img = document.createElement('img')\n      var url\n      /**\n       * Callback for the fetchBlob call.\n       *\n       * @param {HTMLImageElement|HTMLCanvasElement} img Error object\n       * @param {object} data Data object\n       * @returns {undefined} Undefined\n       */\n      function resolveWrapper(img, data) {\n        if (resolve === reject) {\n          // Not using Promises\n          if (resolve) resolve(img, data)\n          return\n        } else if (img instanceof Error) {\n          reject(img)\n          return\n        }\n        data = data || {} // eslint-disable-line no-param-reassign\n        data.image = img\n        resolve(data)\n      }\n      /**\n       * Callback for the fetchBlob call.\n       *\n       * @param {Blob} blob Blob object\n       * @param {Error} err Error object\n       */\n      function fetchBlobCallback(blob, err) {\n        if (err && $.console) console.log(err) // eslint-disable-line no-console\n        if (blob && isInstanceOf('Blob', blob)) {\n          file = blob // eslint-disable-line no-param-reassign\n          url = createObjectURL(file)\n        } else {\n          url = file\n          if (options && options.crossOrigin) {\n            img.crossOrigin = options.crossOrigin\n          }\n        }\n        img.src = url\n      }\n      img.onerror = function (event) {\n        revokeHelper(url, options)\n        if (reject) reject.call(img, event)\n      }\n      img.onload = function () {\n        revokeHelper(url, options)\n        var data = {\n          originalWidth: img.naturalWidth || img.width,\n          originalHeight: img.naturalHeight || img.height\n        }\n        try {\n          loadImage.transform(img, options, resolveWrapper, file, data)\n        } catch (error) {\n          if (reject) reject(error)\n        }\n      }\n      if (typeof file === 'string') {\n        if (loadImage.requiresMetaData(options)) {\n          loadImage.fetchBlob(file, fetchBlobCallback, options)\n        } else {\n          fetchBlobCallback()\n        }\n        return img\n      } else if (isInstanceOf('Blob', file) || isInstanceOf('File', file)) {\n        url = createObjectURL(file)\n        if (url) {\n          img.src = url\n          return img\n        }\n        return readFile(\n          file,\n          function (url) {\n            img.src = url\n          },\n          reject\n        )\n      }\n    }\n    if ($.Promise && typeof callback !== 'function') {\n      options = callback // eslint-disable-line no-param-reassign\n      return new Promise(executor)\n    }\n    return executor(callback, callback)\n  }\n\n  // Determines if metadata should be loaded automatically.\n  // Requires the load image meta extension to load metadata.\n  loadImage.requiresMetaData = function (options) {\n    return options && options.meta\n  }\n\n  // If the callback given to this function returns a blob, it is used as image\n  // source instead of the original url and overrides the file argument used in\n  // the onload and onerror event callbacks:\n  loadImage.fetchBlob = function (url, callback) {\n    callback()\n  }\n\n  loadImage.transform = function (img, options, callback, file, data) {\n    callback(img, data)\n  }\n\n  loadImage.global = $\n  loadImage.readFile = readFile\n  loadImage.isInstanceOf = isInstanceOf\n  loadImage.createObjectURL = createObjectURL\n  loadImage.revokeObjectURL = revokeObjectURL\n\n  if (typeof define === 'function' && define.amd) {\n    define(function () {\n      return loadImage\n    })\n  } else if (typeof module === 'object' && module.exports) {\n    module.exports = loadImage\n  } else {\n    $.loadImage = loadImage\n  }\n})((typeof window !== 'undefined' && window) || this)\n"]},"metadata":{},"sourceType":"module"}