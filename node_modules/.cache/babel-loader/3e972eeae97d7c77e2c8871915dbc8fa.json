{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = labelKeyType;\n\nvar _warn = require('../utils/warn');\n\nvar _warn2 = _interopRequireDefault(_warn);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction labelKeyType(props, propName, componentName) {\n  var allowNew = props.allowNew,\n      labelKey = props.labelKey;\n  (0, _warn2.default)(!(typeof labelKey === 'function' && allowNew), '`labelKey` must be a string when `allowNew={true}`.');\n}","map":{"version":3,"sources":["/Users/annaisthebest/Desktop/hci-ClassMates/node_modules/react-bootstrap-typeahead/lib/propTypes/labelKeyType.js"],"names":["Object","defineProperty","exports","value","default","labelKeyType","_warn","require","_warn2","_interopRequireDefault","obj","__esModule","props","propName","componentName","allowNew","labelKey"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkBC,YAAlB;;AAEA,IAAIC,KAAK,GAAGC,OAAO,CAAC,eAAD,CAAnB;;AAEA,IAAIC,MAAM,GAAGC,sBAAsB,CAACH,KAAD,CAAnC;;AAEA,SAASG,sBAAT,CAAgCC,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;AAAEN,IAAAA,OAAO,EAAEM;AAAX,GAArC;AAAwD;;AAE/F,SAASL,YAAT,CAAsBO,KAAtB,EAA6BC,QAA7B,EAAuCC,aAAvC,EAAsD;AACpD,MAAIC,QAAQ,GAAGH,KAAK,CAACG,QAArB;AAAA,MACIC,QAAQ,GAAGJ,KAAK,CAACI,QADrB;AAGA,GAAC,GAAGR,MAAM,CAACJ,OAAX,EAAoB,EAAE,OAAOY,QAAP,KAAoB,UAApB,IAAkCD,QAApC,CAApB,EAAmE,qDAAnE;AACD","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = labelKeyType;\n\nvar _warn = require('../utils/warn');\n\nvar _warn2 = _interopRequireDefault(_warn);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction labelKeyType(props, propName, componentName) {\n  var allowNew = props.allowNew,\n      labelKey = props.labelKey;\n\n  (0, _warn2.default)(!(typeof labelKey === 'function' && allowNew), '`labelKey` must be a string when `allowNew={true}`.');\n}"]},"metadata":{},"sourceType":"script"}