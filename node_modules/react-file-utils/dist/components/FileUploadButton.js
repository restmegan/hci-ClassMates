var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import React, { useRef } from 'react';
import AttachmentIcon from './AttachmentIcon';
/**
 * Component is described here.
 *
 * @example ./examples/FileUploadButton.md
 */
var FileUploadButton = function (_a) {
    var _b = _a.disabled, disabled = _b === void 0 ? false : _b, _c = _a.multiple, multiple = _c === void 0 ? false : _c, _d = _a.children, children = _d === void 0 ? _jsx(AttachmentIcon, {}, void 0) : _d, handleFiles = _a.handleFiles, accepts = _a.accepts;
    var inputRef = useRef(null);
    var className = 'rfu-file-upload-button';
    if (disabled) {
        className = className + " rfu-file-upload-button--disabled";
    }
    return (_jsx("div", __assign({ className: className }, { children: _jsxs("label", { children: [_jsx("input", { type: "file", ref: inputRef, className: "rfu-file-input", onChange: function (event) {
                        var files = event.currentTarget.files;
                        if (files) {
                            handleFiles(files);
                        }
                        if (inputRef.current !== null) {
                            inputRef.current.value = '';
                            inputRef.current.blur();
                        }
                    }, multiple: multiple, disabled: disabled, accept: Array.isArray(accepts) ? accepts.join(',') : accepts }, void 0), children] }, void 0) }), void 0));
};
export default FileUploadButton;
